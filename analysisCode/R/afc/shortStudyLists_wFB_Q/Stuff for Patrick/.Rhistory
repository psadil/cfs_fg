lines(d$temp, pred_conf[,2], col="pink", lty=2)
lines(d$temp, pred_conf[,3], col="pink", lty=2)
# # CI, for new values=
# lines(d$temp, pred_new[,2], col="orange", ty=2)
# lines(d$temp, pred_new[,3], col="orange", lty=2)
ggplot(d, aes(x=temp, y=cons)) +
xlim(0,75) +
ylim(0,.6) +
geom_point(shape=25, size = 5) +
geom_smooth(method=lm, fullrange = TRUE, aes(y=cons, x=temp, fill = 'pink'), show.legend=FALSE) +
geom_line(data=pred_new, aes(y = lwr), color = "red") +
geom_line(data=pred_new, aes(y = upr), color = "red") +
xlab("temperature (F)") +
theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16)) +
ylab("consumption (pints)") +
theme(axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(angle=90, vjust=0.5, size=16))+
annotate("text", x=5,y=.5,label='R^2 = 0.6', size = 10)
plot(model)
pred_new$temp <- seq(0, 70, by = .1)
# # CI, around prediction
# plot(d$temp, d$cons, xlab='temperature (F)', ylab='consumption (pints)')
# abline(model, col="red")
# lines(d$temp, pred_conf[,2], col="pink", lty=2)
# lines(d$temp, pred_conf[,3], col="pink", lty=2)
ggplot(d, aes(x=temp, y=cons)) +
xlim(0,75) +
ylim(0,.6) +
geom_point(shape=25, size = 5) +
geom_smooth(method=lm, fullrange = TRUE, aes(y=cons, x=temp, fill = 'pink'), show.legend=FALSE) +
geom_line(data=pred_new, aes(y = lwr), color = "red") +
geom_line(data=pred_new, aes(y = upr), color = "red") +
xlab("temperature (F)") +
theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16)) +
ylab("consumption (pints)") +
theme(axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(angle=90, vjust=0.5, size=16))+
annotate("text", x=5,y=.5,label='R^2 = 0.6', size = 10)
plot(model)
pred_new$temp <- seq(0, 70, by = .1)
# # CI, around prediction
# plot(d$temp, d$cons, xlab='temperature (F)', ylab='consumption (pints)')
# abline(model, col="red")
# lines(d$temp, pred_conf[,2], col="pink", lty=2)
# lines(d$temp, pred_conf[,3], col="pink", lty=2)
ggplot(d, aes(x=temp, y=cons)) +
xlim(0,75) +
ylim(0,.6) +
geom_point(shape=25, size = 5) +
geom_smooth(method=lm, fullrange = TRUE, aes(y=cons, x=temp, fill = 'pink'), show.legend=FALSE) +
geom_line(data=pred_new, aes(y = lwr), color = "red") +
geom_line(data=pred_new, aes(y = upr), color = "red") +
xlab("temperature (F)") +
theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16)) +
ylab("consumption (pints)") +
theme(axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(angle=90, vjust=0.5, size=16))+
annotate("text", x=5,y=.5,label='R^2 = 0.6', size = 10)
pcor(d[,1:4])
summary(lm(cons~temp+income,data=d))
summary(lm(cons~income,data=d))
summary(lm(temp~income,data=d))
summary(lm(temp~income,data=d))
tempInc_b1 <- -.853
tempInc_b0 <- 121.33
x <- seq(0,70,.1)
x.w <- tempInc_b0 + consInc_b1*x
x.w <- tempInc_b0 + tempInc_b1*x
y.w <- consInc_b0 + consInc_b1*x
consInc_b1 <- .005
consInc_b0 <- .317
tempInc_b1 <- -.853
tempInc_b0 <- 121.33
x.w <- tempInc_b0 + tempInc_b1*x
y.w <- consInc_b0 + consInc_b1*x
r.xyw <- cor(w.w,y.w); r.xyw
r.xyw <- cor(x.w,y.w); r.xyw
summary(lm(cons~income,data=d))
summary(lm(temp~income,data=d))
x.w <- tempInc_b0 + tempInc_b1*x
y.w <- consInc_b0 + consInc_b1*x
r.xyw <- cor(x.w,y.w); r.xyw
pcor(d[,1:4])
r.xyw <- cor(d$temp-x.w,d$cons-y.w); r.xyw
x <- d$temp
x.w <- tempInc_b0 + tempInc_b1*x
y.w <- consInc_b0 + consInc_b1*x
r.xyw <- cor(d$temp-x.w,d$cons-y.w); r.xyw
pcor(d[,1:4])
d
?pcor
pcor(d[,c('cons','income','temp')])
?pcor.test
cor(d$temp,d$cons)
.776^2
?qt
.0031+.000478*qt(.025,29)
tCrit <- qt(.025,29)
tCrit <- qt(.025,29); tCrit
tCrit <- qt(.025,29,lower.tail = FALSE); tCrit
.0031+.000478*tCrit
.0031-.000478*tCrit
.2068621+0.0247002*tCrit
.2068621-0.0247002*tCrit
x <- rand(10)
?rand
x<-rnorm(0,1)
y<-rnorm(4,1)
cor(x,y)
?rnorm
x<-rnorm(1000,0,1)
y<-rnorm(1000,5,1)
cor(x,y)
cor(x,y*15)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
require(car)
require(Ecdat)
require(ggplot2)
require(ppcor)
# Chunk 2
d<-Icecream
# Chunk 3
model <- lm(cons ~ temp,data=d)
summary(model)
model2 <- lm(cons ~ temp, data=d[1:29,])
summary(model2)
# Chunk 4
plot(model)
pred_new$temp <- seq(0, 70, by = .1)
# # CI, around prediction
# plot(d$temp, d$cons, xlab='temperature (F)', ylab='consumption (pints)')
# abline(model, col="red")
# lines(d$temp, pred_conf[,2], col="pink", lty=2)
# lines(d$temp, pred_conf[,3], col="pink", lty=2)
ggplot(d, aes(x=temp, y=cons)) +
xlim(0,75) +
ylim(0,.6) +
geom_point(shape=25, size = 5) +
geom_smooth(method=lm, fullrange = TRUE, aes(y=cons, x=temp, fill = 'pink'), show.legend=FALSE) +
geom_line(data=pred_new, aes(y = lwr), color = "red") +
geom_line(data=pred_new, aes(y = upr), color = "red") +
xlab("temperature (F)") +
theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16)) +
ylab("consumption (pints)") +
theme(axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(angle=90, vjust=0.5, size=16))+
annotate("text", x=5,y=.5,label='R^2 = 0.6', size = 10)
# Chunk 5
# correlation, regular
cor(d$temp,d$cons)
# removing the linear effect of income...
# income: average family income per week (in US Dollars);
(cor(d$temp,d$cons) - cor(d$temp,d$income)*cor(d$cons,d$income)) /
sqrt((1-cor(d$temp,d$income)^2) * (1-cor(d$cons,d$income)^2))
pcor(d[,c('cons','income','temp')])
# Chunk 6: corComparison
# x <- seq(0,70,.1)
# x <- d$temp
#
# summary(lm(cons~income,data=d))
# consInc_b1 <- .005
# consInc_b0 <- .317
#
# summary(lm(temp~income,data=d))
# tempInc_b1 <- -.853
# tempInc_b0 <- 121.33
#
# x.w <- tempInc_b0 + tempInc_b1*x
# y.w <- consInc_b0 + consInc_b1*x
#
# r.xyw <- cor(d$temp-x.w,d$cons-y.w); r.xyw
b1w <- cor(d$temp,d$cons) * ( sd(d$cons)/ sd(d$temp)); b1w
b0w <- .2068
b1wo <- .835 * ( sd(d$cons)/ sd(d$temp) ); b1wo
b0wo <- mean(d$cons) - b1wo; b0wo
summary(lm(cons~temp+income,data=d))
x <- seq(0,70,.1)
with <- b0w + b1w*x
wo <- b0wo + b1wo*x
df <- data.frame(with = with, wo=wo, temp=x)
modelWO = lm(wo~temp,data=df)
# wo_pred <- predict(model, newdata = d, level=.95, interval='confidence')
wo_pred_new <- as.data.frame(predict(modelWO, data.frame(temp = seq(0, 70, .1)),
level=.95, interval='confidence'))
wo_pred_new$temp <- seq(0, 70, by = .1)
w_pred_new <- as.data.frame(predict(model, data.frame(temp = seq(0, 70, .1)), level=.95, interval='prediction'))
w_pred_new$temp <- seq(0, 70, by = .1)
plot(x,with
, type = 'l'
, col = 'red'
, lwd = 2
, xlab = 'Temperature (F)'
, ylab = 'Consumption (pints)'
, ylim = c(-.2,.6)
, main = 'comparison of slopes with and without income'
)
lines(w_pred_new$temp, w_pred_new$lwr, col="pink", lty=2)
lines(w_pred_new$temp, w_pred_new$upr, col="pink", lty=2)
lines(x,wo
, col = 'blue'
, lwd = 2
)
lines(wo_pred_new$temp, wo_pred_new$lwr, col="blue", lty=2)
lines(wo_pred_new$temp, wo_pred_new$upr, col="blue", lty=2)
# Chunk 7: CISLOPE
tCrit <- qt(.025,29,lower.tail = FALSE); tCrit
.0031+.000478*tCrit
.0031-.000478*tCrit
.2068621+0.0247002*tCrit
.2068621-0.0247002*tCrit
summary(lm(cons~income, data=d))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
require(car)
require(Ecdat)
require(ggplot2)
require(ppcor)
# Chunk 2
d<-Icecream
# Chunk 3
model <- lm(cons ~ temp,data=d)
summary(model)
model2 <- lm(cons ~ temp, data=d[1:29,])
summary(model2)
summary(lm(cons~income, data=d))
# Chunk 4
plot(model)
pred_new$temp <- seq(0, 70, by = .1)
# # CI, around prediction
# plot(d$temp, d$cons, xlab='temperature (F)', ylab='consumption (pints)')
# abline(model, col="red")
# lines(d$temp, pred_conf[,2], col="pink", lty=2)
# lines(d$temp, pred_conf[,3], col="pink", lty=2)
ggplot(d, aes(x=temp, y=cons)) +
xlim(0,75) +
ylim(0,.6) +
geom_point(shape=25, size = 5) +
geom_smooth(method=lm, fullrange = TRUE, aes(y=cons, x=temp, fill = 'pink'), show.legend=FALSE) +
geom_line(data=pred_new, aes(y = lwr), color = "red") +
geom_line(data=pred_new, aes(y = upr), color = "red") +
xlab("temperature (F)") +
theme(axis.title.x = element_text(face="bold", size=15),
axis.text.x  = element_text(angle=0, vjust=0.5, size=16)) +
ylab("consumption (pints)") +
theme(axis.title.y = element_text(face="bold", size=15),
axis.text.y  = element_text(angle=90, vjust=0.5, size=16))+
annotate("text", x=5,y=.5,label='R^2 = 0.6', size = 10)
# Chunk 5
# correlation, regular
cor(d$temp,d$cons)
# removing the linear effect of income...
# income: average family income per week (in US Dollars);
(cor(d$temp,d$cons) - cor(d$temp,d$income)*cor(d$cons,d$income)) /
sqrt((1-cor(d$temp,d$income)^2) * (1-cor(d$cons,d$income)^2))
pcor(d[,c('cons','income','temp')])
# Chunk 6: corComparison
# x <- seq(0,70,.1)
# x <- d$temp
#
# summary(lm(cons~income,data=d))
# consInc_b1 <- .005
# consInc_b0 <- .317
#
# summary(lm(temp~income,data=d))
# tempInc_b1 <- -.853
# tempInc_b0 <- 121.33
#
# x.w <- tempInc_b0 + tempInc_b1*x
# y.w <- consInc_b0 + consInc_b1*x
#
# r.xyw <- cor(d$temp-x.w,d$cons-y.w); r.xyw
b1w <- cor(d$temp,d$cons) * ( sd(d$cons)/ sd(d$temp)); b1w
b0w <- .2068
b1wo <- .835 * ( sd(d$cons)/ sd(d$temp) ); b1wo
b0wo <- mean(d$cons) - b1wo; b0wo
summary(lm(cons~temp+income,data=d))
x <- seq(0,70,.1)
with <- b0w + b1w*x
wo <- b0wo + b1wo*x
df <- data.frame(with = with, wo=wo, temp=x)
modelWO = lm(wo~temp,data=df)
# wo_pred <- predict(model, newdata = d, level=.95, interval='confidence')
wo_pred_new <- as.data.frame(predict(modelWO, data.frame(temp = seq(0, 70, .1)),
level=.95, interval='confidence'))
wo_pred_new$temp <- seq(0, 70, by = .1)
w_pred_new <- as.data.frame(predict(model, data.frame(temp = seq(0, 70, .1)), level=.95, interval='prediction'))
w_pred_new$temp <- seq(0, 70, by = .1)
plot(x,with
, type = 'l'
, col = 'red'
, lwd = 2
, xlab = 'Temperature (F)'
, ylab = 'Consumption (pints)'
, ylim = c(-.2,.6)
, main = 'comparison of slopes with and without income'
)
lines(w_pred_new$temp, w_pred_new$lwr, col="pink", lty=2)
lines(w_pred_new$temp, w_pred_new$upr, col="pink", lty=2)
lines(x,wo
, col = 'blue'
, lwd = 2
)
lines(wo_pred_new$temp, wo_pred_new$lwr, col="blue", lty=2)
lines(wo_pred_new$temp, wo_pred_new$upr, col="blue", lty=2)
# Chunk 7: CISLOPE
tCrit <- qt(.025,29,lower.tail = FALSE); tCrit
.0031+.000478*tCrit
.0031-.000478*tCrit
.2068621+0.0247002*tCrit
.2068621-0.0247002*tCrit
hist(d$temp)
boxplot(d$temp)
boxplot(d$cons)
boxplot(d$temp
, ylab = 'temperatuer')
boxplot(d$temp
, ylab = 'temperature (F)')
boxplot(d$cons,
ylab = 'consumption (pints)')
boxplot(d$cons,
ylab = 'income')
boxplot(d$income,
ylab = 'income')
?Icecream
boxplot(d$income,
ylab = 'income ($ / week)')
par(mfrow=c(2,2))
boxplot(d$temp
, ylab = 'temperature (F)')
boxplot(d$cons,
ylab = 'consumption (pints)')
boxplot(d$income,
ylab = 'income ($ / week)')
summary(lm(cons~income+price,data=d))
summary(lm(cons~income+price+temperature,data=d))
summary(lm(cons~income+price+temp,data=d))
d
summary(lm(cons~income,data=d))
?pcor.test
300/31
8.25/.75
11/31
(11/31)*300
library(ggplot2)
ggplot(data = Orange
, mappting = aes(x=age, y=circumferenec, color=Tree)
)
?confint
?runif
---
title: "psych641_ch21"
install.packages(c("Hmisc", "Rcmdr", "RcmdrMisc", "relimp", "sem", "threejs"))
library(installr)
install.packages('installr')
library(installr)
updateR()
library(States)
library(car)
d<-States
model <- lm(SATM~pay+percent+pop+dollars, data=d)
summary(model)
predict(model)
library(car)
d<-States
model <- lm(SATM~pay+percent+pop+dollars, data=d)
summary(model)
lm_y.234 <- lm(SATM ~ percent+pop+dollars, data=d)
summary(lm_y.234)
unlist(summary(lm_y.234))
lmSPercent.se <- summary(lm_y.234)$sigma
lm_y.234.se <- summary(lm_y.234)$sigma
lm_1.234 <- lm(pay ~ percent+pop+dollars, data=d)
summary(lm_1.234)
lm_1.234.se <- summary(lm_y.134)$sigma
lm_1.234 <- lm(pay ~ percent+pop+dollars, data=d)
summary(lm_1.234)
lm_1.234.se <- summary(lm_1.234)$sigma
resid(lm_1.234)
part <- cor(resid(lm_1.234),resid(lm_y.234))
b_pay <- part*(lm_y.234.se / lm_1.234.se); b_pay
summary(model)
sd(resid(lm_y.234))
part
?predict
x <- data.frame(cbind(pay=25, percent=30,pop=4000,dollars=5))
predict(model, x, interval="prediction")
predict(model, x, interval="mean")
prediction
predict(model, x, interval="prediction")
predict(model, x, interval="conditional")
?predict
predict(model, x, interval="confidence")
predict(model, x, interval="prediction")
summary(model)$r.squared
summaruy(model)
summary(model)
unlist(model)
unlist(summary(model))
summary(model)$p
summary(model)$p.value
model.restr <- lm(SATM ~ pay+percent+dollars, data=d)
anova(model,model.restr)
R2_full <- summary(model)$r.squared
R2_restr <- summary(model.restr)$r.squared
ss_tot <- sum((d$SATM - mean(d$SATM)^2); ss_tot
ss_tot <- sum((d$SATM - mean(d$SATM))^2); ss_tot
SS_full <- R2_full*ss_tot; SS_full
SS_restr <- R2_restr*ss_tot; SS_restr
model.restr <- lm(SATM ~ pay+percent, data=d)
anova(model,model.restr)
ss_tot <- sum((d$SATM - mean(d$SATM))^2); ss_tot
R2_full <- summary(model)$r.squared
R2_restr <- summary(model.restr)$r.squared
SS_full <- R2_full*ss_tot; SS_full
SS_restr <- R2_restr*ss_tot; SS_restr
ss_increment <- SS_full - SS_restr; ss_increment
df_increment <- 2
ms_increment <- ss_increment/df_increment; ms_increment
ss_resid <- (1 - R2_full)*ss_tot; ss_resid
df_resid <- N - 1 - 2 - 2; df_resid
df_resid <- length(d) - 1 - 2 - 2; df_resid
dim(d)[2]
dim(d)[1]
df_resid <- dim(d)[1] - 1 - 2 - 2; df_resid
F <- (ss_increment/df_increment) / (ss_resid/df_resid); F
F
anova(model,model.restr)
model.restr2 <- lm(SATM~pay+percent+dollars,data=d)
anova(model,model.restr2)
summary(model)
summary(step(model, direction='both'))
avPlots(model)
library(lmtest)
harvtest(lm.1)
library(lmtest)
harvtest(model)
plot(model)
hist(resid(model))
library(nortest)
qqPlot(lm.1, main="QQ Plot")
qqPlot(model, main="QQ Plot")
library(nortest)
install.packages('nortest')
library(nortest)
ad.test(d$life_exp) # On data
ad.test(d$SATM) # On data
ad.test(residuals(model)) # On residuals
ncvTest(model)
model.matrix(model)
lev <- hat(model.matrix(model))
lev
plot(lev, xlab='Data point index', ylab='Leverage')
sResids_ext = rstudent(model)
plot(sResids_ext)
abline(0, 0)
outlierTest(model)
spreadLevelPlot(model) # plot studentized residuals vs. fitted values
cutoff <- 4/(nrow(d)-4-1) # 4/(n-p-1)
cutoff
plot(model, which=4, cook.levels=cutoff)
plot(model,which=2)
plot(model, which=4, cook.levels=cutoff)
cutoff <- 4/(nrow(d)-4-1) # 4/(n-p-1)
plot(model,which=2)
plot(model, which=4, cook.levels=cutoff)
spreadLevelPlot(model) # plot studentized residuals vs. fitted values
plot(sResids_ext)
spreadLevelPlot(model) # plot studentized residuals vs. fitted values
?spreadLevelPlot
?rstudent
influencePlot(model, id.method="identify", main="Influence Plot", sub="Circle size is proportial to Cook's Distance" )
cor.test(model)
?cor.test
cor(model)
cor.test(model.matrix(model))
pcor(model)
library(ppcor)
pcor(model)
pcor(model.matrix(model))
avPlot(model)
avPlots(model)
crPlots(model)
tol <- 1-summary(lmSPercent)$r.squared
tol <- 1-summary(model)$r.squared; tol
vif <- 1/tol; vif
vif(model)
library(gvlma)
install.packages('gvlma')
library(gvlma)
gvmodel <- gvlma(fit)
summary(gvmodel)
library(gvlma)
gvmodel <- gvlma(model)
summary(gvmodel)
?glmva
?gvlma
plot(gvmodel)
?gvlma
plot(gvmodel)
plot(gvmodel)
source('C:/Users/admin/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick/R_code.R')
install.packages('Rstan')
install.packages('rstan')
install.packages('rstan')
source('C:/Users/admin/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick/R_code.R')
setwd("C:/Users/admin/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick")
source('C:/Users/admin/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick/R_code.R')
