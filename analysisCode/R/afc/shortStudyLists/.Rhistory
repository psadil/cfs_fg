& data_trim$condition==sub
,]$named, na.rm=TRUE)
, xlim = c(0,1)
, ylim = c(0,1)
, col = cols[1]
, xlab = 'prop 2afc correct'
, ylab = 'recall rate'
, main = c('sub', as.character(sub))
)
# plot remaining points of non-cfs conditions
for (cond in c(2,4)){
points(  x = mean(data_trim[data_trim$condition==cond
& data_trim$condition==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==cond
& data_trim$condition==sub
,]$named, na.rm=TRUE)
, col = cols[cond]
)
}
for (resp in unique(data_trim$studyResp)) {
points(  x = mean(data_trim[data_trim$condition==3
& data_trim$studyResp3==resp
& data_trim$condition==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==3
& data_trim$studyResp3==resp
& data_trim$condition==sub
,]$named, na.rm=TRUE)
, col = cols[3]
, pch = resp+1
)
}
#   legend("topleft", legend = c(studyConds[1:2],studyConds[4],rep(studyConds[3],4)),
#          col=c(cols[1:2],cols[4],rep(cols[3],4)),pch = c(rep(1,times=3),2:5),bty="n")
}
sub=1
par(mfrow=c(2,4))
sub
plot(  x = mean(data_trim[data_trim$condition==1
& data_trim$condition==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==1
& data_trim$condition==sub
,]$named, na.rm=TRUE)
, xlim = c(0,1)
, ylim = c(0,1)
, col = cols[1]
, xlab = 'prop 2afc correct'
, ylab = 'recall rate'
, main = c('sub', as.character(sub))
)
for (cond in c(2,4)){
points(  x = mean(data_trim[data_trim$condition==cond
& data_trim$condition==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==cond
& data_trim$condition==sub
,]$named, na.rm=TRUE)
, col = cols[cond]
)
}
for (cond in c(2,4)){
points(  x = mean(data_trim[data_trim$condition==cond &
data_trim$condition==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==cond &
data_trim$condition==sub
,]$named, na.rm=TRUE)
, col = cols[cond]
)
}
data_trim
data_trim[data_trim$subject==1]
data_trim[data_trim$subject==1,]
mean(data_trim[data_trim$condition==cond
& data_trim$condition==sub
,]$afc, na.rm=TRUE)
cond
cond=2
mean(data_trim[data_trim$condition==cond
& data_trim$condition==sub
,]$afc, na.rm=TRUE)
mean(data_trim[data_trim$condition==cond &
data_trim$condition==sub
,]$afc, na.rm=TRUE)
mean(data_trim[data_trim$condition==cond
& data_trim$subject==sub
,]$afc, na.rm=TRUE)
par(mfrow=c(2,4))
for (sub in 1:nSubs) {
# plot first point (to initilize graph)
plot(  x = mean(data_trim[data_trim$condition==1
& data_trim$subject==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==1
& data_trim$subject==sub
,]$named, na.rm=TRUE)
, xlim = c(0,1)
, ylim = c(0,1)
, col = cols[1]
, xlab = 'prop 2afc correct'
, ylab = 'recall rate'
, main = c('sub', as.character(sub))
)
# plot remaining points of non-cfs conditions
for (cond in c(2,4)){
points(  x = mean(data_trim[data_trim$condition==cond
& data_trim$subject==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==cond
& data_trim$subject==sub
,]$named, na.rm=TRUE)
, col = cols[cond]
)
}
for (resp in unique(data_trim$studyResp)) {
points(  x = mean(data_trim[data_trim$condition==3
& data_trim$studyResp3==resp
& data_trim$subject==sub
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==3
& data_trim$studyResp3==resp
& data_trim$subject==sub
,]$named, na.rm=TRUE)
, col = cols[3]
, pch = resp+1
)
}
#   legend("topleft", legend = c(studyConds[1:2],studyConds[4],rep(studyConds[3],4)),
#          col=c(cols[1:2],cols[4],rep(cols[3],4)),pch = c(rep(1,times=3),2:5),bty="n")
}
par(mfrow=c(3,3))
warnings(
)
wd <- getwd()
wd
dataFile <- paste(wd, "/cfs_obj_2afc_ss1.dat", sep="")
dataFile
stop("vectors must be same length")
setwd("D:/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/cfs_fg/analysisCode/R/afc/shortStudyLists")
2==c(1,2,1000)
unique(data_trim$studyResp)
unique(data_trim$studyResp)[1:4]
rep(studyConds[c(2,4)],each=4)
c(studyConds[1],rep(studyConds[c(2,4)],each=4)
)
c(1,rep(2:5,each=3))
c(1,rep(2:5,each=4))
c(studyConds[1],rep(studyConds[c(2,4)],each=4),rep(studyConds[3],4))
c(1,rep(2:5,times=3))
par(mfrow=c(1,1))
# plot first point (to initilize graph)
plot(  x = mean(data_trim[data_trim$condition==1,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==1,]$named, na.rm=TRUE)
, xlim = c(0,1)
, ylim = c(0,1)
, col = cols[1]
, xlab = 'prop 2afc correct'
, ylab = 'recall rate'
, main = ' '
)
# plot remaining points of non-cfs conditions
for (cond in c(2,4)){
for (resp in 1:4){
points(  x = mean(data_trim[data_trim$condition==cond
& data_trim$studyResp3==resp
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==cond
& data_trim$studyResp3==resp
,]$named, na.rm=TRUE)
, col = cols[cond]
, pch = resp+1
)
}
}
for (resp in 1:4) {
points(  x = mean(data_trim[data_trim$condition==3 & data_trim$studyResp3==resp
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==3 & data_trim$studyResp3==resp
,]$named, na.rm=TRUE)
, col = cols[3]
, pch = resp+1
)
}
legend("topleft", legend =
c(studyConds[1],rep(studyConds[c(2,4)],each=4),rep(studyConds[3],4))
,col=c(cols[1],rep(cols[c(2,4)],each=4),rep(cols[3],4))
,pch = c(1,rep(2:5,times=3)),bty="n")
par(mfrow=c(1,1))
# plot first point (to initilize graph)
plot(  x = mean(data_trim[data_trim$condition==1,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==1,]$named, na.rm=TRUE)
, xlim = c(0,1)
, ylim = c(0,1)
, col = cols[1]
, xlab = 'prop 2afc correct'
, ylab = 'recall rate'
, main = ' '
)
# plot remaining points of non-cfs conditions
for (cond in c(2,4)){
for (resp in 1:4){
points(  x = mean(data_trim[data_trim$condition==cond
& data_trim$studyResp3==resp
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==cond
& data_trim$studyResp3==resp
,]$named, na.rm=TRUE)
, col = cols[cond]
, pch = resp+1
)
}
}
for (resp in 1:4) {
points(  x = mean(data_trim[data_trim$condition==3 & data_trim$studyResp3==resp
,]$afc, na.rm=TRUE)
, y = mean(data_trim[data_trim$condition==3 & data_trim$studyResp3==resp
,]$named, na.rm=TRUE)
, col = cols[3]
, pch = resp+1
)
}
legend("topleft", legend =
c(studyConds[1],rep(studyConds[c(2,4)],each=4),rep(studyConds[3],4))
,col=c(cols[1],rep(cols[c(2,4)],each=4),rep(cols[3],4))
,pch = c(1,rep(2:5,times=3)),bty="n")
?mar
?par
par(mfrow=c(1,1),mar=c(1,1,1,1)+.1)
data_trim
?count
count(baseball[1:100,], vars = "id")
library(plr)
library(plyr)
count(baseball[1:100,], vars = "id")
baseball
head(baseball)
count(baseball[1:100,], vars = "id")
count(baseball, "stint")
view(baseball)
show(baseball)
count(data_trim[data_trim$subject==1,], "studyResp3")
sum(data_trim[data_trim$subject==1,], "studyResp3")
(data_trim[data_trim$subject==1,], "studyResp3")
count(data_trim[data_trim$subject==1,], "studyResp3")
count(baseball, "lg")
count(baseball, "lg", 'stint')
count(baseball, "lg", "stint")
count(baseball, c("lg","stint"))
count(data_trim, c('studyResp3',"studyResp1"))
count(data_trim, c('studyResp3',"studyResp"))
count(data_trim, c('studyResp3',"studyResp",'condition'))
tally <- count(data_trim, c('studyResp3',"studyResp",'condition'))
tally
?qplot
means.barplot <- qplot(x=studyResp, y=studyResp3,
data=tally, geom="bar", stat="identity",
position="dodge")
means.barplot <- qplot(x=studyResp, y=studyResp3,
data=tally, geom="bar")
qplot(x=studyResp, y=studyResp3,
data=tally, geom="bar")
qplot(x=studyResp, y=studyResp3,
data=tally, geom="bar")
tally[tally$studyResp==1000,]=5
tally[tally$studyResp3==1000,]=5
data_trim_tmp <- data_trim
data_trim_tmp[data_trim_tmp$studyResp==1000,] = 5
tally
diamons
diamonds
qplot(color, data = diamonds, geom = "bar")
means.barplot <- qplot(x=studyResp, y=studyResp3,
data=data_trim, geom="bar")
means.barplot <- qplot(x=studyResp,
data=data_trim, geom="bar")
head(diamonds)
is.factor(data_trim$studyResp)
qplot(x=as.factor(studyResp),
data=data_trim, geom="bar")
means.barplot <- qplot(x=as.factor(studyResp),
data=data_trim, geom="histogram")
p <- ggplot(diamonds, aes(x=price))
p + geom_histogram()
p + stat_bin(geom="area")
p + stat_bin(geom="point")
p + stat_bin(geom="line")
p + geom_histogram(aes(fill = clarity))
p + geom_histogram(aes(y = ..density..))
ggplot(diamonds, aes(x=price))
+ geom_histogram(aes(y = ..density..))
means.barplot <- qplot(x=as.factor(studyResp),
data=data_trim, geom="bar")
qplot(x=as.factor(studyResp),
data=data_trim, geom="bar")
qplot(x=as.factor(studyResp,
data=data_trim, geom="bar")
)
qplot(x=as.factor(studyResp,
data=data_trim, geom="bar")
s
means.barplot <- qplot(x=as.factor(studyResp),
data=data_trim, geom="bar")
qplot(x=as.factor(studyResp),
data=data_trim, geom="bar")
qplot(x=as.factor(studyResp),
data=data_trim, geom="bar")
tally
is.data.frame(tally)
barplot(tally)
barplot(tally$freq)
pas.mean_cfs.item = array(999,c(nPresent,nSubs,nItems))
pas.n_cfs.item = array(999,c(nPresent,nSubs,nItems))
196/4
198/4
192/4
192/4/16
16*4
pas_sub_item_plot = array(999,c(nPresent,48*nSubs))
pas.mean_cfs.item = array(999,c(nPresent,nSubs,nItems))
pas.n_cfs.item = array(999,c(nPresent,nSubs,nItems))
for (sub in 1:nSubs){
for (item in 1:nItems) {
if (data[data$whichItem==item
& data$subject==sub
,]$condition==3){
# first present
pas.mean_cfs.item[1,sub,item] <-
data[data$condition==3
& data$subject==sub
& data$whichItem==item,]$studyResp-1
pas.n_cfs.item[1,sub,item] <-
dim(data[data$condition==3
& data$subject==sub
& data$whichItem==item,])[1]
# second present
pas.mean_cfs.item[2,sub,item] <-
data[data$condition==3
& data$subject==sub
& data$whichItem==item,]$studyResp2-1
pas.n_cfs.item[2,sub,item] <-
dim(data[data$condition==3
& data$subject==sub
& data$whichItem==item,])[1]
# third present
pas.mean_cfs.item[3,sub,item] <-
data[data$condition==3
& data$subject==sub
& data$whichItem==item,]$studyResp3-1
pas.n_cfs.item[3,sub,item] <-
dim(data[data$condition==3
& data$subject==sub
& data$whichItem==item,])[1]
}
}
}
pas.n_cfs.item
pas_sub_item_plot = array(999,c(nPresent,48*nSubs))
item = 0
for (sub in 1:nSubs){
for (trl in 1:nItems){
if((pas.mean_cfs.item[,sub,trl])!=999){
item = item+1
pas_sub_item_plot[,item] <- pas.mean_cfs.item[,sub,trl]
}
}
}
nItems
nSubs
nItems/nConds
pasCondi.mean.item = array(999,c(nSubs,nPAS,nItems))
pasCondi.n.item = array(999,c(nSubs,nPAS,nItems))
for (sub in 1:nSubs){
for (pas in 1:nConds){
for (item in 1:nItems) {
if (length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
&& data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas) {
# given first resp of pas, what was third?
pasCondi.mean.item[sub,pas,item] <-
data[data$studyResp==pas
& data$condition==3
& data$subject==sub
& data$whichItem==item,]$studyResp3-1
pasCondi.n.item[sub,pas,item] <-
dim(data[data$studyResp==pas
& data$condition==3
& data$subject==sub
& data$whichItem==item,])[1]
}
}
}
}
head(data)
pasCondi.mean.item = array(999,c(nSubs,nPAS,nItems))
pasCondi.n.item = array(999,c(nSubs,nPAS,nItems))
for (sub in 1:nSubs){
for (pas in 1:nConds){
for (item in 1:nItems) {
if (length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
&& data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas) {
# given first resp of pas, what was third?
pasCondi.mean.item[sub,pas,item] <-
data[data$studyResp==pas
& data$condition==3
& data$subject==sub
& data$whichItem==item,]$studyResp3-1
pasCondi.n.item[sub,pas,item] <-
dim(data[data$studyResp==pas
& data$condition==3
& data$subject==sub
& data$whichItem==item,])[1]
}
}
}
}
nPAS
nConds
head(data)
length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
&& data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)
(length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
&& data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)
(length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
& data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)
length(data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas)!=0
data[data$whichItem==item
& data$subject==sub
& data$condition==3
,]$studyResp==pas
item
sub
data[data$whichItem==item,]
data[data$whichItem==item
& data$subject==sub,]
pasCondi.mean.item = array(999,c(nSubs,nPAS,nItems))
pasCondi.n.item = array(999,c(nSubs,nPAS,nItems))
for (sub in 1:nSubs){
for (pas in 1:nConds){
for (item in 1:nItems) {
if (length(data_trim[data_trim$whichItem==item
& data_trim$subject==sub
& data_trim$condition==3
,]$studyResp==pas)!=0
&& data_trim[data_trim$whichItem==item
& data_trim$subject==sub
& data_trim$condition==3
,]$studyResp==pas) {
# given first resp of pas, what was third?
pasCondi.mean.item[sub,pas,item] <-
data_trim[data_trim$studyResp==pas
& data_trim$condition==3
& data_trim$subject==sub
& data_trim$whichItem==item,]$studyResp3-1
pasCondi.n.item[sub,pas,item] <-
dim(data_trim[data_trim$studyResp==pas
& data_trim$condition==3
& data_trim$subject==sub
& data_trim$whichItem==item,])[1]
}
}
}
}
(data_trim[data_trim$whichItem==item
& data_trim$subject==sub
,]$condition==3)
barplot(t(tally_prop)
, beside = TRUE
, main = "p(PAS_3 | PAS_1)"
, ylim = c(0,1)
, legend.text = c('to 0', 'to 1', 'to 2', 'to 3')
, args.legend = list(x="topleft")
, names.arg = c('0', '1', '2', '3')
, bty= 'n'
)
