# don't want PAS as a factor, because there are
# vastly different numbers of each kind of response
# Do I want condition as factor? if it were, that would
# seem to make stronger claims (justified) about higher levels
# leading to higher recall rates
studyConds <- c("foil","word","cfs","binoc")
cols <- c('black', 'cornflowerblue', 'darkgoldenrod1', 'red')
pasResps <- c("0","1","2","3")
# trim away missing values (there aren't, currently)
data_trim <- na.omit(data)
cutoff = 3 # only look at CFS with PAS 2 or 1
nPresent = 3 # presented 3 times
nStudy = nTrials * nPresent
pd <- position_dodge(0.001)
# Chunk 3
# name_pas4 <- withinSubError(data_trim,4,nConds)
# name_pas3 <- withinSubError(data_trim,3,nConds)
# name_pas2 <- withinSubError(data_trim,2,nConds)
# name_pas1 <- withinSubError(data_trim,1,nConds)
# sem <- rbind(name_pas1$sem_cf,name_pas2$sem_cf,name_pas3$sem_cf,name_pas4$sem_cf)
# tPlot <- rbind(name_pas1$y_sj,name_pas2$y_sj,name_pas3$y_sj,name_pas4$y_sj)
#
# data_plot <- data_trim
# data_plot[data_plot$studyResp3==1e+05,]$studyResp3 = 1
# data_plot$studyResp3 <- as.factor(data_plot$studyResp3)
# #data_plot$studyResp3 == as.double(data_plot$studyResp3)
#
dfwc3 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","studyResp3"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc3<-ddply(dfwc3,.(condition),transform,prop=N/sum(N))
dfwc1 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","studyResp"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc1<-ddply(dfwc1,.(condition),transform,prop=N/sum(N))
# Chunk 4
ggplot(dfwc3, aes(x=studyResp3, y=named)) +
geom_bar(position=position_dodge(.9), colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=named-ci, ymax=named+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("named") +
ggtitle("% named for each condition, given third PAS")
# Chunk 5
ggplot(dfwc3, aes(x=studyResp3, y=prop)) +
geom_bar(position=position_dodge(.9), colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=prop-ci, ymax=prop+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("proportion") +
ggtitle("proportion of each PAS (third presentation) in each condition")
# Chunk 6
ggplot(dfwc1, aes(x=studyResp, y=named)) +
geom_bar(position=position_dodge(.9), colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=named-ci, ymax=named+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("named") +
ggtitle("% named for each condition, given first PAS")
# Chunk 7
ggplot(dfwc1, aes(x=studyResp, y=prop)) +
geom_bar(position=position_dodge(.9), colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=prop-ci, ymax=prop+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("proportion") +
ggtitle("proportion of each PAS (first presentation) in each condition")
# Chunk 8
dfwc_pas <- summarySEwithin(data, measurevar="named", withinvars=c("studyResp","studyResp3"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas<-ddply(dfwc_pas,.(studyResp3),transform,p3Gp1=N/sum(N))
dfwc_pas_cfs <- summarySEwithin(data[data$condition=='c_cfs',], measurevar="named",                          withinvars=c("studyResp","studyResp3"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas_cfs<-ddply(dfwc_pas_cfs,.(studyResp3),transform,p3Gp1=N/sum(N))
# Chunk 9
ggplot(dfwc_pas, aes(x=studyResp3, y=p3Gp1)) +
geom_bar(position=position_dodge(.9), colour="black", stat="identity") +
facet_grid(. ~ studyResp ) +
facet_wrap(~ studyResp, ncol=3) +
xlab("PAS") +
ylab("p(PAS_3|PAS_1)") +
ggtitle(" Proportion of thrid PAS given first PAS ")
# Chunk 10
# ggplot(dfwc_pas_cfs, aes(x=studyResp3, y=p3Gp1)) +
#   geom_bar(position=position_dodge(.9), colour="black", stat="identity") +
#   facet_grid(. ~ studyResp ) +
#   facet_wrap(~ studyResp, ncol=3) +
#   xlab("PAS") +
#   ylab("p(PAS_3|PAS_1)") +
#   ggtitle(" Proportion of thrid PAS given first PAS ")
# Chunk 11
afc_all <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_all <- summarySEwithin(data, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stAll <- cbind(named=name_all$named
,named_norm=name_all$named_norm
,ci_named=name_all$ci
,afc_all
,count=(afc_all$N+name_all$N)/2)
# using only data for when PAS == 2
data_trim <- data[(data$studyResp3=="2" & data$condition=='c_cfs') |
(data$studyResp3=="3" & data$condition=='d_binocular') |
(data$studyResp3=="3" & data$condition=='b_word') |
(data$studyResp3=="99999" & data$condition=='a_foil'),]
afc_trim <- summarySEwithin(data_trim
, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_trim <- summarySEwithin(data_trim
, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stTrim <- cbind(named=name_trim$named
,named_norm=name_trim$named_norm
,ci_named=name_trim$ci
,afc_trim
,count=(afc_trim$N+name_trim$N)/2)
# hack to plot this value
na.rm = FALSE
afc_avgSubFirst <- ddply(data_trim, c('subject','condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(subjectMean = mean(xx[,col], na.rm=na.rm))
},
'afc',
na.rm
)
toPlot_stTrim.afc_avgSub <- ddply(afc_avgSubFirst, c('condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(afc_avgSub = mean(xx[,col], na.rm=na.rm))
},
'subjectMean',
na.rm
)
toPlot_stTrim <- merge(toPlot_stTrim, toPlot_stTrim.afc_avgSub)
named_avgSubFirst <- ddply(data_trim, c('subject','condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(subjectMean = mean(xx[,col], na.rm=na.rm))
},
'named',
na.rm
)
toPlot_stTrim.named_avgSub <- ddply(named_avgSubFirst, c('condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(named_avgSub = mean(xx[,col], na.rm=na.rm))
},
'subjectMean',
na.rm
)
toPlot_stTrim <- merge(toPlot_stTrim, toPlot_stTrim.named_avgSub)
# using only data for when PAS == 0-2
data02 <- data[(data$studyResp3=="2" & data$condition=='c_cfs') |
(data$studyResp3=="0" & data$condition=='c_cfs') |
(data$studyResp3=="1" & data$condition=='c_cfs') |
(data$studyResp3=="3" & data$condition=='d_binocular') |
(data$studyResp3=="3" & data$condition=='b_word') |
(data$studyResp3=="99999" & data$condition=='a_foil'),]
afc_trim02 <- summarySEwithin(data02
, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_trim02 <- summarySEwithin(data02
, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stTrim02 <- cbind(named=name_trim02$named
,named_norm=name_trim02$named_norm
,ci_named=name_trim02$ci
,afc_trim02
,count=(afc_trim02$N+name_trim02$N)/2)
afc02_avgSubFirst <- ddply(data02, c('subject','condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(subjectMean = mean(xx[,col], na.rm=na.rm))
},
'afc',
na.rm
)
toPlot_stTrim02.afc_avgSub <- ddply(afc02_avgSubFirst, c('condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(afc02_avgSub = mean(xx[,col], na.rm=na.rm))
},
'subjectMean',
na.rm
)
toPlot_stTrim02 <- merge(toPlot_stTrim02, toPlot_stTrim02.afc_avgSub)
named02_avgSubFirst <- ddply(data02, c('subject','condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(subjectMean = mean(xx[,col], na.rm=na.rm))
},
'named',
na.rm
)
toPlot_stTrim02.named_avgSub <- ddply(named02_avgSubFirst, c('condition'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(named02_avgSub = mean(xx[,col], na.rm=na.rm))
},
'subjectMean',
na.rm
)
toPlot_stTrim02 <- merge(toPlot_stTrim02, toPlot_stTrim02.named_avgSub)
# Chunk 12
pd <- position_dodge(0.001)
ggplot(toPlot_stAll, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
geom_point(position=pd, size=1)  +  #aes(size=count)
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, for each condition, collapsed across PAS/presentations") +
theme(aspect.ratio = 1) +
# theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank())
# Chunk 13: trimmed
# note that many fewer data points go in to the CFS point (pay attention to the 'count' column)
toPlot_stTrim
# Chunk 14
ggplot(toPlot_stTrim, aes(x=afc_avgSub, y=named_avgSub, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named_avgSub-ci_named, ymax=named_avgSub+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc_avgSub-ci, xmax=afc_avgSub+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
geom_point(position=pd, size=1)  +  #aes(size=count)
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, conditions depend on PAS") +
theme(aspect.ratio = 1) +
# theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank())
# Chunk 15
toPlot_stTrim02
# Chunk 16
ggplot(toPlot_stTrim02, aes(x=afc02_avgSub, y=named02_avgSub, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named02_avgSub-ci_named, ymax=named02_avgSub+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc02_avgSub-ci, xmax=afc02_avgSub+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
geom_point(position=pd, size=1)  +  #aes(size=count)
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, conditions depend on PAS") +
theme(aspect.ratio = 1) +
# theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank())
# Chunk 17
# state trace plots
dfwc3_afc <- summarySEwithin(data, measurevar="afc"                       , withinvars=c("condition","studyResp3"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot3 <- cbind(named=dfwc3$named,ci_named=dfwc3$ci
,dfwc3_afc,count=(dfwc3$N+dfwc3_afc$N)/2)
dfwc1_afc <- summarySEwithin(data, measurevar="afc"                       , withinvars=c("condition","studyResp"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot1 <- cbind(named=dfwc1$named,ci_named=dfwc1$ci
,dfwc1_afc,count=(dfwc1$N+dfwc1_afc$N)/2)
# Chunk 18
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, size=1) +
facet_grid(. ~ studyResp3 ) +
facet_wrap(~ studyResp3, ncol=3) +
ggtitle("state trace, facets indicate PAS response on third presentation (99999 => foil)") +
theme(aspect.ratio = 1)
# Chunk 19
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, aes(size=count)) +
scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ studyResp3 ) +
facet_wrap(~ studyResp3, ncol=3) +
ggtitle("state trace, facets indicate PAS response on third presentation (99999 => foil)") +
theme(aspect.ratio = 1)
# Chunk 20
ggplot(toPlot1, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, aes(size=count))  +
scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ studyResp ) +
facet_wrap(~ studyResp, ncol=3) +
ggtitle("state trace, facets indicate PAS response on first presentation (99999 => foil)") +
theme(aspect.ratio = 1)
# Chunk 21
afc_sub <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_sub <- cbind(named=name_sub$named
,named_norm=name_sub$named_norm
,ci_named=name_sub$ci
,afc_sub
,count=(afc_sub$N+name_sub$N)/2)
# Chunk 22
ggplot(toPlot_sub, aes(x=afc_norm, y=named_norm, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named_norm-ci_named, ymax=named_norm+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc_norm-ci, xmax=afc_norm+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
geom_point(position=pd, size=1)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=5) +
ggtitle("state trace, by subject, normalized scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 23
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
geom_point(position=pd, size=1)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=5) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 24: items
first <- seq(from=1, to = nItems, by = 16)
second <- seq(from=16, to = nItems, by = 16)
nBlocks <- nItems / 16
items_named <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
items_afc <- summarySEwithin(data, measurevar="afc"
, withinvars=c("condition","whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
toPlot_item <- cbind(named=items_named$named
,named_norm=items_named$named_norm
,ci_named=items_named$ci
,items_afc
,count=(items_afc$N+items_named$N)/2)
items_named_avg <- summarySEwithin(data, measurevar="named"
, withinvars=c("whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
items_afc_avg <- summarySEwithin(data, measurevar="afc"
, withinvars=c("whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
toPlot_item_avg <- cbind(named=items_named_avg$named
,named_norm=items_named_avg$named_norm
,ci_named=items_named_avg$ci
,items_afc_avg
,count=(items_afc_avg$N+items_named_avg$N)/2)
# Chunk 25
ggplot(toPlot_item, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=2)  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each items") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 26
ggplot(toPlot_item, aes(x=afc, y=named, colour=condition, group=condition)) +
# geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
# geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=2)  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each items") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 27
ggplot(toPlot_item_avg, aes(x=afc, y=named)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, aes(size=count))  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
# facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
# facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each item") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 28
ggplot(toPlot_item_avg, aes(x=afc, y=named)) +
# geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
# geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, aes(size=count))  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
# facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
# facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each item") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 29: itemsLogit
na.rm = TRUE
toPlot_item_avg.namedLogit <- ddply(toPlot_item_avg, c('whichItem'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(namedLogit = logit(xx[,col]))
},
'named',
na.rm
)
toPlot_item_avg.afcLogit <- ddply(toPlot_item_avg, c('whichItem'), .drop=TRUE,
.fun = function(xx, col, na.rm) {
c(afcLogit = logit(xx[,col]))
},
'afc',
na.rm
)
toPlot_item_avg <- merge(toPlot_item_avg, toPlot_item_avg.namedLogit)
toPlot_item_avg <- merge(toPlot_item_avg, toPlot_item_avg.afcLogit)
ggplot(toPlot_item_avg[toPlot_item_avg$afcLogit != Inf & toPlot_item_avg$namedLogit != -Inf & toPlot_item_avg$namedLogit != Inf,], aes(x=afcLogit, y=namedLogit)) +
# geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
# geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, aes(size=count))  +  # count
coord_cartesian(xlim = c(-4, 4), ylim = c(-4,4)) +
scale_y_continuous(breaks=c(-4,4)) +
scale_x_continuous(breaks=c(-4,4)) +
ggtitle("state trace, item, logit transformed scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# Chunk 30
library(dplyr)
# Chunk 31
tmp <- filter(toPlot_item, condition %in% c('a_foil', 'd_binocular' ))
tmpBinoc <- filter(tmp, condition == 'd_binocular') %>%
select(., afc, named,whichItem)
tmpFoil <- filter(tmp, condition == 'a_foil') %>%
select(., afc, named,whichItem)
full <- cbind(tmpBinoc[,1:2] - tmpFoil[,1:2], item = tmpBinoc[,3]) %>%
arrange(., desc(afc),desc(named))
plot(tmpFoil$afc, tmpBinoc$afc
, xlab = 'foil'
, ylab = 'binocular'
, main = 'afc in different conditions'
, ylim = c(0,1)
, xlim = c(0,1)
)
abline(0,1)
full
# Chunk 32
# collapsed across subjects, grouped by condition and pas response to the first study
dfwc1
# collapsed across subjects, grouped by condition and pas response to the third study
dfwc3
# data for every subject, grouped by condition, collapsed across all pas ratings for all three study presentations
toPlot_sub
full
head(full)
View(full)
full[full$item==105,]
full[full$item==183,]
full[full$item==35,]
full[full$item==54,]
192-128
64/16
full[full$item==90,]
full[full$item==25,]
full[full$item==94,]
full[full$item==110,]
full[full$item==8,]
full[full$item==18,]
full[full$item==26,]
full[full$item==97,]
full[full$item==10,]
full[full$item==51,]
full[full$item==109,]
full[full$item==133,]
full[full$item==5,]
