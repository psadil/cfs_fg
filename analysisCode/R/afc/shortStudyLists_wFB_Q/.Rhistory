# Chunk 10
library(plyr)
afc_all <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_all <- summarySEwithin(data, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stAll <- cbind(named=name_all$named
,named_norm=name_all$named_norm
,ci_named=name_all$ci
,afc_all
,count=(afc_all$N+name_all$N)/2)
detach(package:plyr)
# Chunk 11
ggplot(toPlot_stAll, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05) +
geom_point(size=1)  +  #aes(size=count)
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, for each condition, collapsed across PAS/presentations") +
theme(aspect.ratio = 1) +
# theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank())
# Chunk 12
library(dplyr)
afc_all_list <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95)
summarySEwithin(data, measurevar="named",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=., y=afc_all_list, by = c('condition', 'list','N')) %>%
ggplot(data=., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_point(size=1) +
geom_errorbar(aes(ymin=named-ci.x, ymax=named+ci.x), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci.y, xmax=afc+ci.y), colour="black", height=.05) +
facet_grid(. ~ list ) +
facet_wrap(~ list, ncol=3) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
#scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, by list") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
# Chunk 13: trimmed
# note that many fewer data points go in to the CFS point (pay attention to the 'count' column)
# pander(toPlot_stTrim)
# Chunk 14
library(dplyr)
afc <- select(data,subject, condition, named, afc, pas1) %>%
filter(., (condition == 'd_binocular' & pas1 == 3) |
(condition == 'a_foil') |
(condition == 'b_word' & pas1 == 3) |
(condition == 'c_cfs' & pas1 == 2)) %>%
group_by(., subject, condition) %>%
summarySEwithin(., measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
select(data,subject, condition, named, afc, pas1) %>%
filter(., (condition == 'd_binocular' & pas1 == 3) |
(condition == 'a_foil') |
(condition == 'b_word' & pas1 == 3) |
(condition == 'c_cfs' & pas1 == 2)) %>%
group_by(., subject, condition) %>%
summarySEwithin(., measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=afc, y=., by = c('condition','N')) %>%
ggplot(data = ., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci.y, ymax=named+ci.y), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci.x, xmax=afc+ci.x), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1)  +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, (cfs==2), (word & binoc == 3)") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
# Chunk 15
# state trace plots
dfwc3_afc <- summarySEwithin(data, measurevar="afc", withinvars=c("condition","pas2"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot3 <- cbind(named=dfwc3$named,ci_named=dfwc3$ci
,dfwc3_afc,count=(dfwc3$N+dfwc3_afc$N)/2)
dfwc1_afc <- summarySEwithin(data, measurevar="afc", withinvars=c("condition","pas1"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot1 <- cbind(named=dfwc1$named,ci_named=dfwc1$ci
,dfwc1_afc,count=(dfwc1$N+dfwc1_afc$N)/2)
# Chunk 16
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(size=1) +
facet_grid(. ~ pas2 ) +
facet_wrap(~ pas2, ncol=3) +
ggtitle("state trace, facets indicate PAS response on second presentation") +
theme(aspect.ratio = 1)
# Chunk 17
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(aes(size=count)) +
scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ pas2 ) +
facet_wrap(~ pas2, ncol=3) +
ggtitle("state trace, facets indicate PAS response on second presentation") +
theme(aspect.ratio = 1)
pander(toPlot3)
# Chunk 18
# ggplot(toPlot1, aes(x=afc, y=named, colour=condition, group=condition)) +
#   geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
#   geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
#   coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
#   geom_point(position=pd, aes(size=count))  +
#   scale_size_continuous(breaks=c(10,100,200,400,600)) +
#   facet_grid(. ~ studyResp ) +
#   facet_wrap(~ studyResp, ncol=3) +
#   ggtitle("state trace, facets indicate PAS response on first presentation") +
#   theme(aspect.ratio = 1)
# Chunk 19
afc_sub <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_sub <- cbind(named=name_sub$named
,named_norm=name_sub$named_norm
,ci_named=name_sub$ci
,afc_sub
,count=(afc_sub$N+name_sub$N)/2)
# Chunk 20
# ggplot(toPlot_sub, aes(x=afc_norm, y=named_norm, colour=condition, group=condition)) +
#   geom_errorbar(aes(ymin=named_norm-ci_named, ymax=named_norm+ci_named), colour="black", width=.05, position=pd) +
#   geom_errorbarh(aes(xmin=afc_norm-ci, xmax=afc_norm+ci), colour="black", height = .05, position=pd) +
#   # ylim(0,1) +
#   # xlim(0,1) +
#   coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
#   scale_y_continuous(breaks=c(0,1)) +
#   scale_x_continuous(breaks=c(0,1)) +
#   geom_point(position=pd, size=1)  +  #aes(size=count)
#   #  scale_size_continuous(breaks=c(10,100,200,400,600)) +
#   facet_grid(. ~ subject ) +
#   facet_wrap(~ subject, ncol=5) +
#   ggtitle("state trace, by subject, normalized scores") +
#   theme(aspect.ratio = 1) +
#   theme(axis.ticks = element_blank())
# # theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 21
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
geom_point(size=1)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=5) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 22
# afc_subList <- summarySEwithin(data, measurevar="afc",
#                            withinvars=c("condition", 'list', 'subject'),
#                            idvar="subject", na.rm=TRUE, conf.interval=.95)
#
# summarySEwithin(data, measurevar="named",
#                             withinvars=c("condition", 'list', 'subject'),
#                             idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
#   inner_join(x=afc_subList, y=., by = c('condition', 'list','N','subject')) %>%
#
#   ggplot(data=., aes(x=afc, y=named, colour=condition, group=condition)) +
#   geom_errorbar(aes(ymin=named-ci.x, ymax=named+ci.x), colour="black", width=.05, position=pd) +
#   geom_errorbarh(aes(xmin=afc-ci.y, xmax=afc+ci.y), colour="black", height = .05, position=pd) +
#   geom_point(position=pd, size=1) +
#   facet_grid(. ~ list:subject ) +
#   facet_wrap(~ list:subject, ncol=3) +
#   coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
#   scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
#   ggtitle("state trace, by list") +
#   theme(aspect.ratio = 1) +
#   theme(axis.ticks = element_blank())
# Chunk 23: items
items_named <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
items_afc <- summarySEwithin(data, measurevar="afc"
, withinvars=c("condition","whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
toPlot_item <- cbind(named=items_named$named
,named_norm=items_named$named_norm
,ci_named=items_named$ci
,items_afc
,count=(items_afc$N+items_named$N)/2)
items_named_avg <- summarySEwithin(data, measurevar="named"
, withinvars=c("whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
items_afc_avg <- summarySEwithin(data, measurevar="afc"
, withinvars=c("whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
toPlot_item_avg <- cbind(named=items_named_avg$named
,named_norm=items_named_avg$named_norm
,ci_named=items_named_avg$ci
,items_afc_avg
,count=(items_afc_avg$N+items_named_avg$N)/2)
# Chunk 24
ggplot(toPlot_item, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05) +
geom_point(size=2)  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each items") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 25
ggplot(toPlot_item, aes(x=afc, y=named, colour=condition, group=condition)) +
# geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
# geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(size=2)  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each items") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 26
ggplot(toPlot_item_avg, aes(x=afc, y=named)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05) +
geom_point(aes(size=count))  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
# facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
# facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each item") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 27
ggplot(toPlot_item_avg, aes(x=afc, y=named)) +
# geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
# geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(aes(size=count))  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
# facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
# facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each item") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
# Chunk 28
# Chunk 29: itemsLogit
# library(plyr)
#
# na.rm = TRUE
# toPlot_item_avg.namedLogit <- ddply(toPlot_item_avg, c('whichItem'), .drop=TRUE,
#                                     .fun = function(xx, col, na.rm) {
#                                       c(namedLogit = logit(xx[,col]))
#                                     },
#                                     'named',
#                                     na.rm
# )
# toPlot_item_avg.afcLogit <- ddply(toPlot_item_avg, c('whichItem'), .drop=TRUE,
#                                   .fun = function(xx, col, na.rm) {
#                                     c(afcLogit = logit(xx[,col]))
#                                   },
#                                   'afc',
#                                   na.rm
# )
#
# toPlot_item_avg <- merge(toPlot_item_avg, toPlot_item_avg.namedLogit)
# toPlot_item_avg <- merge(toPlot_item_avg, toPlot_item_avg.afcLogit)
#
#
# ggplot(toPlot_item_avg[toPlot_item_avg$afcLogit != Inf & toPlot_item_avg$namedLogit != -Inf & toPlot_item_avg$namedLogit != Inf,], aes(x=afcLogit, y=namedLogit)) +
#   geom_point(position=pd, aes(size=count))  +  # count
#   coord_cartesian(xlim = c(-4, 4), ylim = c(-4,4)) +
#   scale_y_continuous(breaks=c(-4,4)) +
#   scale_x_continuous(breaks=c(-4,4)) +
#   ggtitle("state trace, item, logit transformed scores") +
#   theme(aspect.ratio = 1) +
#   theme(axis.ticks = element_blank())
#
# detach(package:plyr)
# Chunk 30
# Chunk 31
library(dplyr)
tmp <- filter(toPlot_item, condition %in% c('a_foil', 'd_binocular' ))
tmpBinoc <- filter(tmp, condition == 'd_binocular') %>%
select(., afc, named,whichItem)
tmpFoil <- filter(tmp, condition == 'a_foil') %>%
select(., afc, named,whichItem)
full <- cbind(tmpBinoc[,1:2] - tmpFoil[,1:2], item = tmpBinoc[,3]) %>%
arrange(., desc(afc),desc(named))
plot(tmpFoil$afc, tmpBinoc$afc
, xlab = 'foil'
, ylab = 'binocular'
, main = 'afc in different conditions'
, ylim = c(0,1)
, xlim = c(0,1)
)
abline(0,1)
full
detach(package:dplyr)
# Chunk 32
# collapsed across subjects, grouped by condition and pas response to the first study
pander(dfwc1)
# collapsed across subjects, grouped by condition and pas response to the third study
pander(dfwc3)
# data for every subject, grouped by condition, collapsed across all pas ratings for all three study presentations
pander(toPlot_sub)
500/40
500/24
full
full[full$item==144,]
objPair <- read.csv('stimPairings.csv')
objPair
is.data.frame(objPair)
objPair <- read.csv('stimPairings.csv', header=FALSE)
objPair
objPair <- objPair[,1:2] %>%
rename(., obj1 = V1, obj2 = V2)
library(dplyr)
objPair <- objPair[,1:2] %>%
rename(., obj1 = V1, obj2 = V2)
objPair
library(dplyr)
objPairs <- read.csv('stimPairings.csv', header=FALSE)
objPairs <- objPairs[,1:2] %>%
rename(., obj1 = V1, obj2 = V2)
full
objPairs <- read.csv('stimPairings.csv', header=FALSE)
objPairs <- objPairs[,1:2] %>%
rename(., item = V1, obj2 = V2) %>%
objPairs <- read.csv('stimPairings.csv', header=FALSE)
objPairs <- objPairs[,1:2] %>%
rename(., item = V1, obj2 = V2) %>%
inner_join(x=full, y=objPairs, by=item)
objPairs <- read.csv('stimPairings.csv', header=FALSE)
objPairs <- objPairs[,1:2] %>%
rename(., item = V1, obj2 = V2)
inner_join(x=full, y=objPairs, by='item')
head(objPairs)
head(full)
inner_join(x=full, y=objPairs, by=item)
?inner_join
inner_join(x=full, y=objPairs, by='item')
is.factor(full$item)
is.factor(objPairs$item)
?transmute
objPairs <- read.csv('stimPairings.csv', header=FALSE)
objPairs <- objPairs[,1:2] %>%
rename(., item = V1, obj2 = V2) %>%
mutate(., item = factor(item), obj2 = factor(obj2))
inner_join(x=full, y=objPairs, by='item')
full
objPairs
inner_join(x=full, y=objPairs, by='item')
mutate(full, obj2 = item)
full <- mutate(full, obj2 = item)
full
library(dplyr)
tmp <- filter(toPlot_item, condition %in% c('a_foil', 'd_binocular' ))
tmpBinoc <- filter(tmp, condition == 'd_binocular') %>%
select(., afc, named,whichItem)
tmpFoil <- filter(tmp, condition == 'a_foil') %>%
select(., afc, named,whichItem)
full <- cbind(tmpBinoc[,1:2] - tmpFoil[,1:2], item = tmpBinoc[,3]) %>%
arrange(., desc(afc),desc(named))
plot(tmpFoil$afc, tmpBinoc$afc
, xlab = 'foil'
, ylab = 'binocular'
, main = 'afc in different conditions'
, ylim = c(0,1)
, xlim = c(0,1)
)
abline(0,1)
full
detach(package:dplyr)
library(dplyr)
full2 <- mutate(full, obj2 = item)
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2')
inner_join(x=full, y=objPairs, by='item')
library(dplyr)
tmp <- filter(toPlot_item, condition %in% c('a_foil', 'd_binocular' ))
tmpBinoc <- filter(tmp, condition == 'd_binocular') %>%
select(., afc, named,whichItem)
tmpFoil <- filter(tmp, condition == 'a_foil') %>%
select(., afc, named,whichItem)
full <- cbind(tmpBinoc[,1:2] - tmpFoil[,1:2], item = tmpBinoc[,3]) %>%
arrange(., desc(afc),desc(named))
plot(tmpFoil$afc, tmpBinoc$afc
, xlab = 'foil'
, ylab = 'binocular'
, main = 'afc in different conditions'
, ylim = c(0,1)
, xlim = c(0,1)
)
abline(0,1)
full
detach(package:dplyr)
full2 <- mutate(full, obj2 = item)
library(dplyr)
full2 <- mutate(full, obj2 = item)
full
inner_join(x=full, y=objPairs, by='item')
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2')
full
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2')
tmp<-inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2')
tmp
select(tmp, afc.x,afc.y)
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item,afc.x,obj2,afc.y)
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item,afc.x,obj2,afc.y)
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y)
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFC = mean(c(.[,'afc.x'],.[,'afc.y'])))
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFC = mean(.[,c(2,4)]))
t<-inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y)
t
head(t)
is.numeric(t$afc.x )
is.numeric(t$afc.y )
t<-inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFC = rowMeans(.[,c(2,4)]))
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFC = rowMeans(.[,c(2,4)]))
mean(c(-1,.5))
mean(c(-.66666,.5))
mean(c(-.5,-.16666))
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFCIncrease = rowMeans(.[,c(2,4)]))
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFCIncrease = rowMeans(.[,c(2,4)])) %>%
arrange(., meanAFCIncrease)
inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFCIncrease = rowMeans(.[,c(2,4)])) %>%
arrange(., desc(meanAFCIncrease))
128-32
t<-inner_join(x=full, y=objPairs, by='item') %>%
inner_join(x=full2, y=., by = 'obj2') %>%
select(., item.x, afc.x, item.y, afc.y) %>%
mutate(., meanAFCIncrease = rowMeans(.[,c(2,4)])) %>%
arrange(., desc(meanAFCIncrease))
t
t[97:128,]
nrows(t[97:128,])
nRows(t[97:128,])
?nrows
??nrows
nrow(t[97:128,])
t[97:128,]$item.x
nRows(t[97:128,])
t[97:128,]
