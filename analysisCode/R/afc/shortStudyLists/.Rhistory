38*3
120/2
120/2
60/3
((120/2)/2)
((120/2)/3)
(((120/2)/3)/2)
(((120/2)/3)/2)*2*2*3
(((120/2)/3)/2)
10*2*2*3
((((120/2)/3)/2)-1)*2*2*3
((((120/2)/3)/2)-1)
9*2*2*3
252-4
252-5
a <- c(-4,0,1,3)
b <- c(-2,2,2,-2)
mu <- 10
n <- 5
a <- c(-4,0,1,3)
b <- c(-2,2,2,-2)
mu <- 10
n <- 5
g1 <- c(a[1],a[4],a[2],a[3])+mu+b
g2 <- c(a[3],a[2],a[4],a[1])+b+mu
g3 <- c(a[4],a[1],a[3],a[2])+b+mu
g4 <- c(a[2],a[3],a[1],a[4])+b+mu
data <- rbind(g1,g2,g3,g4)
data
library(reshape2)
library(ez)
?melt
df <- data.frame(data)
df
names(df)[1]
names(df)[1] <- b1
names(df)[2] <- b2
names(df)[3] <- b3
names(df)[1] <- 'b1'
names(df)[2] <- 'b2'
names(df)[3] <- 'b3'
names(df)[4] <- 'b4'
df
rep(df,2)
rep(data,2)
?rep
subs <- 1:4
df[rep(seq_len(nrow(df)), each=n),]
df_more <- df[rep(seq_len(nrow(df)), each=n),]
df_more
subs <- rep(1:5,times=4)
df <- cbind(df_more,subs)
df
data_melt <- melt(data,id.vars='subs'
, measure.vars=c('b1','b2','b3','b3')
, variable.name = 'b'
)
df_melt
data_melt
data_melt <- melt(df,id.vars='subs'
, measure.vars=c('b1','b2','b3','b3')
, variable.name = 'b'
)
data_melt
g <- rbind(c(1,4,2,3),c(3,2,4,1),c(4,1,3,2),c(2,3,1,4))
g
g[1]
g[2]
g[3]
g[4]
dimd(g)
dim(g)
g[rep(seq_len(nrow(g)), each=n),]
dim(g[rep(seq_len(nrow(g)), each=n),])
dim(data_melt)
cbind(data_melt,g[rep(seq_len(nrow(g)), each=n),])
as.vector(g[rep(seq_len(nrow(g)), each=n),])
data_fin<-cbind(data_melt,as.vector(g[rep(seq_len(nrow(g)), each=n),]))
data_fin
names(data_fin)[4] = a
names(data_fin)[4] = 'a'
data_fin
data_fin<-cbind(data_melt,as.vector(t(g[rep(seq_len(nrow(g)), each=n),])))
names(data_fin)[4] = 'a'
data_fin
data_fin<-cbind(data_melt,as.vector(g[rep(seq_len(nrow(g)), each=n),]))
names(data_fin)[4] = 'a'
data_fin
g
g[rep(seq_len(ncol(g)), each=n),])
g[rep(seq_len(ncol(g)), each=n),]
data_fin<-cbind(data_melt,as.vector(g[rep(seq_len(ncol(g)), each=n),]))
names(data_fin)[4] = 'a'
data_fin
unlist(g)
?scan
as.vector(g)
as.vector(t(g))
data_fin<-cbind(data_melt,as.vector(t(g[rep(seq_len(nrow(g)), each=n),])))
names(data_fin)[4] = 'a'
data_fin
data_fin<-cbind(data_melt,as.vector(g[rep(seq_len(nrow(t(g))), each=n),]))
names(data_fin)[4] = 'a'
data_fin
seq_len()
?seq_len
c(g)
as.vector(g)
data_fin<-cbind(data_melt,c(g[rep(seq_len(nrow(t(g))), each=n),])
names(data_fin)[4] = 'a'
c(g[rep(seq_len(nrow(t(g))), each=n),])
data_fin<-cbind(data_melt,c(g[rep(seq_len(nrow(g)), each=n),])
)
data_fin<-cbind(data_melt,c(g[rep(seq_len(nrow(g)), each=n),]))
names(data_fin)[4] = 'a'
data_fin
c(g[rep(seq_len(nrow(g)), each=n),]))
c(g[rep(seq_len(nrow(g)), each=n),])
c(g[rep(seq_len(nrow(t(g))), each=n),])
c(t(g[rep(seq_len(nrow(t(g))), each=n),]))
g[rep(seq_len(nrow(t(g))), each=n),])
g[rep(seq_len(nrow(t(g))), each=n),]
g
c(g[rep(seq_len(nrow(g)), each=n),])
g[rep(seq_len(nrow(g)), each=n),]
g
t(g)
rep(c(t(g)),n)
rep(c(t(g)),each=n)
data_fin<-cbind(data_melt,rep(c(t(g)),each=n))
names(data_fin)[4] = 'a'
data_fin
is.factor(data_fin$b)
is.factor(data_fin$a)
data_fin<-cbind(data_melt,as.factor(rep(c(t(g)),each=n)))
names(data_fin)[4] = 'a'
is.factor(data_fin$a)
is.factor(data_fin$sub)
is.factor(data_fin$subs)
a <- c(-4,0,1,3)
b <- c(-2,2,2,-2)
mu <- 10
n <- 5
g <- rbind(c(1,4,2,3),c(3,2,4,1),c(4,1,3,2),c(2,3,1,4))
g1 <- c(a[1],a[4],a[2],a[3])+mu+b
g2 <- c(a[3],a[2],a[4],a[1])+b+mu
g3 <- c(a[4],a[1],a[3],a[2])+b+mu
g4 <- c(a[2],a[3],a[1],a[4])+b+mu
data <- rbind(g1,g2,g3,g4)
df <- data.frame(data)
names(df)[1] <- 'b1'
names(df)[2] <- 'b2'
names(df)[3] <- 'b3'
names(df)[4] <- 'b4'
df_more <- df[rep(seq_len(nrow(df)), each=n),]
subs <- as.factor(rep(1:5,times=4))
df <- cbind(df_more,subs)
df
data_melt <- melt(df,id.vars='subs'
, measure.vars=c('b1','b2','b3','b3')
, variable.name = 'b'
)
data_fin<-cbind(data_melt,as.factor(rep(c(t(g)),each=n)))
names(data_fin)[4] = 'a'
is.factor(data_fin$subs)
data_fin
is.factor(data_fin$value)
?grep
a.ss <- 0
a.ss <- 0
for (var in 1:4){
a.ss <- a.ss + (data_fin[data_fin$a==var,]-mu^2)
}
a.ss
a.ss <- 0
for (var in 1:4){
a.ss <- a.ss + (data_fin[data_fin$a==var,]$value-mu^2)
}
a.ss
var=1
a.ss <- 0
for (tmp in 1:4){
a.ss <- a.ss + (data_fin[data_fin$a==tmp,]$value-mu^2)
}
a.ss
tmp
var
var(a.ss)
a.ss <- 0
for (tmp in 1:4){
a.ss <- a.ss + (data_fin[data_fin$a==tmp,]$value-mu)^2
}
a.ss
(data_fin[data_fin$a==tmp,]$value-mu)^2
(data_fin[data_fin$a==tmp,]$value
)
a.ss <- 0
for (tmp in 1:4){
a.ss <- a.ss + sum((data_fin[data_fin$a==tmp,]$value-mu)^2)
}
a.ss
sumsq
b.ss <- 0
for (tmp in 1:4){
b.ss <- b.ss + sum((data_fin[data_fin$b==tmp,]$value-mu)^2)
}
b.ss
data_fin
data_fin<-cbind(data_melt
,as.factor(rep(c(t(g)),each=n))
,as.factor(rep(1:4,each=20))
)
names(data_fin)[4] = 'a'
names(data_fin)[5] = 'g'
data_fin
g.ss <- 0
for (tmp in 1:4){
g.ss <- g.ss + sum((data_fin[data_fin$g==tmp,]$value-mu)^2)
}
g.ss
a[g]
length(a[g])
a[g]+mu+b
?as.matrix
as.matrix(a[g]+mu+b,nrow=4,ncol=4)
a[g]+mu+b
as.matrix(a[g]+mu+b)
as.matrix(a[g]+mu+b,nrow=4,ncol=4)
as.matrix(a[g]+mu+b,nrow=4,ncol=4,byrow=TRUE)
array(g)
array(g,dim=c(4,4))
array(a[g]+mu+b,dim=c(4,4))
g.ss
ab <- rbind(c(2,1,-2,-2),c(0,-2,0,-3),c(-3,-3,-2,3),c(1,4,4,2))
data_c <- array(a[g]+mu+b+ab,dim=c(4,4))
data_ab
data_c
df <- data.frame(data_c)
names(df)[1] <- 'b1'
names(df)[2] <- 'b2'
names(df)[3] <- 'b3'
df_c <- cbind(df_c_more,subs)
df_c_more <- df[rep(seq_len(nrow(df_c)), each=n),]
df_c <- cbind(df_c_more,subs)
data_c_melt <- melt(df_c,id.vars='subs'
, measure.vars=c('b1','b2','b3','b3')
, variable.name = 'b'
)
df_c_more <- df_c[rep(seq_len(nrow(df_c)), each=n),]
ab <- rbind(c(2,1,-2,-2),c(0,-2,0,-3),c(-3,-3,-2,3),c(1,4,4,2))
data_c <- array(a[g]+mu+b+ab,dim=c(4,4))
df_c <- data.frame(data_c)
names(df_c)[1] <- 'b1'
names(df_c)[2] <- 'b2'
names(df_c)[3] <- 'b3'
names(df_c)[4] <- 'b4'
df_c_more <- df_c[rep(seq_len(nrow(df_c)), each=n),]
df_c <- cbind(df_c_more,subs)
data_c_melt <- melt(df_c,id.vars='subs'
, measure.vars=c('b1','b2','b3','b3')
, variable.name = 'b'
)
data_c_fin<-cbind(data_c_melt
,as.factor(rep(c(t(g)),each=n))
,as.factor(rep(1:4,each=20))
)
names(data_c_fin)[4] = 'a'
names(data_c_fin)[5] = 'g'
a.ss <- 0
for (tmp in 1:4){
a.ss <- a.ss + sum((data_fin[data_fin$a==tmp,]$value-mu)^2)
}
a.ss
b.ss <- 0
for (tmp in 1:4){
b.ss <- b.ss + sum((data_fin[data_fin$b==tmp,]$value-mu)^2)
}
b.ss
g.ss <- 0
for (tmp in 1:4){
g.ss <- g.ss + sum((data_fin[data_fin$g==tmp,]$value-mu)^2)
}
g.ss
a_c.ss <- 0
for (tmp in 1:4){
a.ss <- a_c.ss + sum((data_c_fin[data_c_fin$a==tmp,]$value-mu)^2)
}
a_c.ss
b_c.ss <- 0
for (tmp in 1:4){
b_c.ss <- b_c.ss + sum((data_c_fin[data_c_fin$b==tmp,]$value-mu)^2)
}
b_c.ss
g_c.ss <- 0
for (tmp in 1:4){
g_c.ss <- g_c.ss + sum((data_c_fin[data_c_fin$g==tmp,]$value-mu)^2)
}
g_c.ss
# preamble
library(ggplot2)
library(plyr)
source("C:/Users/PSadil/Documents/R/fns.R")
setwd("D:/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/cfs_fg/analysisCode/R/afc/shortStudyLists")
# preliminary changing of folders
#setwd("D:/googleDrive/uMass/firstYear/behavioralExpts/pSadil/processDissociation/CFS/analysisCode/R/afc/shortStudyLists")
wd <- getwd()
dataFile <- paste(wd, "/cfs_obj_2afc_ss1.dat", sep="")
# find the data that was generated from the matlab files
data <- read.csv(dataFile)
# add 1 to study resp because participants were instructed to use 0-3
#data[data$studyResp3==1e+05,]$studyResp3 = 1
#data$studyResp3 <- as.factor(data$studyResp3)
nConds = max(data$condition,na.rm=TRUE)
nPAS = max(data[data$studyResp < 1000,]$studyResp,na.rm=TRUE) + 1
nItems = max(data$whichItem,na.rm=TRUE)
nSubs = max(data$subject,na.rm=TRUE)
nTrials = max(data$trial,na.rm=TRUE)
nInCond = nItems / nConds
# number of items in each condition, first presentation
nPerCond = nItems/nConds
data$trial = as.factor(data$trial)
data$whichItem = as.factor(data$whichItem)
data$subject = as.factor(data$subject)
data$condition = as.factor(data$condition)
data$studyResp = as.factor(data$studyResp)
data$studyResp2 = as.factor(data$studyResp2)
data$studyResp3 = as.factor(data$studyResp3)
#data$condition = as.numeric(data$condition)
# don't want PAS as a factor, because there are
# vastly different numbers of each kind of response
# Do I want condition as factor? if it were, that would
# seem to make stronger claims (justified) about higher levels
# leading to higher recall rates
studyConds <- c("foil","word","cfs","binoc")
cols <- c('black', 'cornflowerblue', 'darkgoldenrod1', 'red')
pasResps <- c("0","1","2","3")
# trim away missing values (there aren't, currently)
data_trim <- na.omit(data)
cutoff = 3 # only look at CFS with PAS 2 or 1
nPresent = 3 # presented 3 times
nStudy = nTrials * nPresent
# name_pas4 <- withinSubError(data_trim,4,nConds)
# name_pas3 <- withinSubError(data_trim,3,nConds)
# name_pas2 <- withinSubError(data_trim,2,nConds)
# name_pas1 <- withinSubError(data_trim,1,nConds)
# sem <- rbind(name_pas1$sem_cf,name_pas2$sem_cf,name_pas3$sem_cf,name_pas4$sem_cf)
# tPlot <- rbind(name_pas1$y_sj,name_pas2$y_sj,name_pas3$y_sj,name_pas4$y_sj)
#
# data_plot <- data_trim
# data_plot[data_plot$studyResp3==1e+05,]$studyResp3 = 1
# data_plot$studyResp3 <- as.factor(data_plot$studyResp3)
# #data_plot$studyResp3 == as.double(data_plot$studyResp3)
#
dfwc3 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","studyResp3"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc3<-ddply(dfwc3,.(condition),transform,prop=N/sum(N))
dfwc1 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","studyResp"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc1<-ddply(dfwc1,.(condition),transform,prop=N/sum(N))
- although these error bars more accurately reflect the within-subjects nature of the study condition factor, the y-axis is still bounded between [0,1]. So, I still need to figure out a reasonable way to plot those values...
dfwc_pas <- summarySEwithin(data, measurevar="named",                          withinvars=c("studyResp","studyResp3"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas<-ddply(dfwc_pas,.(studyResp3),transform,p3Gp1=N/sum(N))
# pas_condit <- as.data.frame(cbind(p3=dfwc3$prop,ci3=dfwc3$ci,condition=dfwc3
#                                   , firstP=dfwc1$prop,firstCI=dfwc1$ci))
# dfwc_pas<-ddply(dfwc_pas,.(condition:studyResp),transform,test=N/sum(N))
# state trace plots
dfwc3_afc <- summarySEwithin(data, measurevar="afc"                       , withinvars=c("condition","studyResp3"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot3 <- cbind(named=dfwc3$named,ci_named=dfwc3$ci
,dfwc3_afc,count=(dfwc3$N+dfwc3_afc$N)/2)
dfwc1_afc <- summarySEwithin(data, measurevar="afc"                       , withinvars=c("condition","studyResp"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot1 <- cbind(named=dfwc1$named,ci_named=dfwc1$ci
,dfwc1_afc,count=(dfwc1$N+dfwc1_afc$N)/2)
head(data)
dfwc3_afc_sub <- summarySEwithin(data, measurevar="afc"                       , withinvars=c("condition","studyResp3","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
head(dfwc3_afc_sub)
dfwc3_afc_sub
dfwc3_afc_sub <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
dfwc3_afc_sub
dfwc3_name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
dfwc3_name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
afc_sub <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
afc_sub <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_sub <- cbind(named=name_sub$named,ci_named=name_sub$ci
,afc_sub,count=(afc_sub$N+name_sub$N)/2)
name_sub
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, aes(size=count))  +
scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=4) +
ggtitle("state trace, facets indicate PAS response on first presentation (1e+05 => foil)") +
theme(aspect.ratio = 1)
toPlot_sub <- cbind(named=name_sub$named
,named_norm=name_sub$named_norm
,ci_named=name_sub$ci
,afc_sub
,count=(afc_sub$N+name_sub$N)/2)
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc_norm, y=named_norm, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=3)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=4) +
ggtitle("state trace, by subject, normalized scores") +
theme(aspect.ratio = 1)
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc_norm, y=named_norm, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named_norm-ci_named, ymax=named_norm+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc_norm-ci, xmax=afc_norm+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=3)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=4) +
ggtitle("state trace, by subject, normalized scores") +
theme(aspect.ratio = 1)
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=3)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=4) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1)
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=1)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=5) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1)
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=2)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=8) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1) +
scale_x_discrete(breaks=NULL)
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=2)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=8) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank(), axis.text.x = element_blank())
pd <- position_dodge(0.001)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
ylim(0,1) +
xlim(0,1) +
geom_point(position=pd, size=2)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=8) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank(), axis.text.y = element_blank())
