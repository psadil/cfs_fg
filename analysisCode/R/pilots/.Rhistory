rRates.mean_pasCond
pasResps <- c("0","1","2","3")
pasCond.bp <- barplot(t(rRates.mean_pasCond),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
legend.text=pasResps,
args.legend = list(x="bottomright"),
xlab = "study length",
ylab = "proportion named"
)
error.bar(pasCond.bp,t(rRates.mean_pasCond),
t(rRates.sem_pasCond))
rRates.n_pasCond.prop = matrix(0,nrow=4,ncol=4)
for (cond in 1:nConds) {
for (pas in 1:nPAS){
rRates.n_pasCond.prop[cond,pas] <-
rRates.n_pasCond[cond,pas] /
sum(rRates.n_pasCond[cond,])
}
}
pasCond_n.bp <- barplot(t(rRates.n_pasCond.prop),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
legend.text=pasResps,
args.legend = list(x="bottomright"),
xlab = "study length",
ylab = "proportion of resposnes"
)
pasResps <- c("0","1","2","3")
pas.bp <- barplot(recalRates.mean_pas,
beside=TRUE,
names.arg=pasResps,
ylim=c(0,1),
#col=presentCol,
legend.text=presentConds,
args.legend = list(x="bottomright")
)
error.bar(pas.bp,recalRates.mean_pas,
recalRates.sem_pas)
pasResps <- c("0","1","2","3")
pas.bp <- barplot(recalRates.mean_pas,
beside=TRUE,
names.arg=pasResps,
ylim=c(0,1)
#col=presentCol,
#legend.text=presentConds,
#args.legend = list(x="bottomright")
)
error.bar(pas.bp,recalRates.mean_pas,
recalRates.sem_pas)
recalRates.mean_pas.sub = array(0,dim=c(1,nPAS,nSubs))
recalRates.mean_pas.sub
recalRates.mean_pas.sub = matrix(0,nrow=nPAS,ncol=nSubs)
recalRates.mean_pas.sub
# look at recal rates broken up by pas/presentation, across all conditions,
recalRates.mean_pas.sub = matrix(0,nrow=nPAS,ncol=nSubs)
recalRates.sem_pas.sub = matrix(0,nrow=nPAS,ncol=nSubs)
recalRates.n_pas.sub = matrix(0,nrow=nPAS,ncol=nSubs)
for (pas in 1:nPAS) {
for (sub in 1:nSubs) {
recalRates.mean_pas.sub[pas,sub] <-
mean(data[data$studyResp==pas & data$subject==sub,]$named,
na.rm=TRUE)
recalRates.n_pas.sub[pas,sub] <-
dim(data[data$studyResp==pas & data$subject==sub,])[1]
# var = n*p*(1-p)
recalRates.sem_pas.sub[pas,sub] <-
sqrt(recalRates.n_pas.sub[pas,sub] *
recalRates.mean_pas.sub[pas,sub] *
(1- recalRates.mean_pas.sub[pas,sub])) /
sqrt(recalRates.n_pas.sub[pas,sub])
}
}
recalRates.mean_pas.sub
par(mfrow=c(3,3))
error.bar <- function(x, y, upper, lower=upper, length=0.1,...){
if(length(x) != length(y) | length(y) !=length(lower) | length(lower) != length(upper))
stop("vectors must be same length")
arrows(x,y+upper, x, y-lower, angle=90, code=0, length=length, ...)
}
for (sub in 1:nSubs){
bp<-barplot(recalRates.mean_pas.sub[,sub]
, beside=TRUE
, names.arg=pasResps
, ylim=c(0,1)
#col=presentCol,
#legend.text=presentConds,
#args.legend = list(x="bottomright")
)
error.bar(bp,recalRates.mean_pas.sub[,sub],
recalRates.sem_pas.sub[,sub])
}
par(mfrow=c(3,3))
for (sub in 1:nSubs){
bp<-barplot(recalRates.mean_pas.sub[,sub]
, beside=TRUE
, names.arg=pasResps
, ylim=c(0,1)
#, ylab =
#col=presentCol,
#legend.text=presentConds,
#args.legend = list(x="bottomright")
)
error.bar(bp,recalRates.mean_pas.sub[,sub],
recalRates.sem_pas.sub[,sub])
}
for (sub in 1:nSubs){
bp<-barplot(recalRates.mean_pas.sub[,sub]
, beside=TRUE
, names.arg=pasResps
, ylim=c(0,1)
, ylab = "proportion of resposnes"
#col=presentCol,
#legend.text=presentConds,
#args.legend = list(x="bottomright")
)
error.bar(bp,recalRates.mean_pas.sub[,sub],
recalRates.sem_pas.sub[,sub])
}
par(mfrow=c(3,3))
for (sub in 1:nSubs){
bp<-barplot(recalRates.mean_pas.sub[,sub]
, beside=TRUE
, names.arg=pasResps
, ylim=c(0,1)
, ylab = "proportion of resposnes"
#col=presentCol,
#legend.text=presentConds,
#args.legend = list(x="bottomright")
)
error.bar(bp,recalRates.mean_pas.sub[,sub],
recalRates.sem_pas.sub[,sub])
}
# look at recal rates broken up by pas/presentation, across all conditions,
recalRates.mean_cond.sub = matrix(0,nrow=nConds,ncol=nSubs)
recalRates.sem_cond.sub = matrix(0,nrow=nConds,ncol=nSubs)
for (cond in 1:nConds) {
for (sub in 1:nSubs) {
recalRates.mean_cond.sub[cond,sub] <-
mean(data[data$studyResp==cond & data$subject==sub,]$named,
na.rm=TRUE)
howMany = dim(data[data$studyResp==cond & data$subject==sub,])[1]
# var = n*p*(1-p)
recalRates.sem_cond.sub[cond,sub] <-
sqrt(howMany * recalRates.mean_cond.sub[cond,sub] *
(1- recalRates.mean_cond.sub[cond,sub])) /
sqrt(howMany)
}
}
rRates.mean_pasCond.sub = array(0,dim=c(nConds,nPAS,nSubs))
rRates.sem_pasCond.sub = array(0,dim=c(nConds,nPAS,nSubs))
rRates.n_pasCond.sub = array(0,dim=c(nConds,nPAS,nSubs))
for (cond in 1:nConds) {
for (pas in 1:nPAS) {
for (sub in 1:nSubs) {
rRates.mean_pasCond.sub[cond,pas,sub] <-
mean(data_trim[data_trim$condition==cond &
data_trim$studyResp==pas &
data_trim$subject == sub
,]$named,
na.rm=TRUE)
rRates.n_pasCond.sub[cond,pas,sub] <-
dim(data_trim[data_trim$condition==cond &
data_trim$studyResp==pas &
data_trim$subject == sub
,])[1]
# var = n*p*(1-p)
rRates.sem_pasCond.sub[cond,pas,sub] <-
sqrt(rRates.n_pasCond.sub[cond,pas,sub] *
rRates.mean_pasCond.sub[cond,pas,sub] *
(1- rRates.mean_pasCond.sub[cond,pas,sub])) /
sqrt(rRates.n_pasCond.sub[cond,pas,sub])
}
}
}
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond.sub.bp <- barplot(t(rRates.mean_pasCond.sub[,,sub]),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "mean named"
)
}
rRates.n_pasCond.prop.sub = array(0,dim=c(nConds,nPAS,nSubs))
for (cond in 1:nConds) {
for (pas in 1:nPAS){
for (sub in 1:nSubs) {
rRates.n_pasCond.prop.sub[cond,pas,sub] <-
rRates.n_pasCond.sub[cond,pas,sub] /
sum(rRates.n_pasCond.sub[cond,,sub])
}
}
}
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond_prop.sub.bp <- barplot(t(rRates.n_pasCond.prop.sub[,,sub]),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "proportion of responses"
)
}
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond.sub.bp <- barplot(rRates.mean_pasCond.sub[,,sub],
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "mean named"
)
}
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond_prop.sub.bp <- barplot(rRates.n_pasCond.prop.sub[,,sub],
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "proportion of responses"
)
}
rRates.n_pasCond.prop.sub
rRates.mean_pasCond.sub
rRates.mean_pasCond.sub[,,1]
rRates.mean_pasCond.sub[,,1]
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond.sub.bp <- barplot(t(rRates.mean_pasCond.sub[,,sub]),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "mean named"
)
}
rRates.n_pasCond.prop.sub(,,1)
rRates.n_pasCond.prop.sub
rRates.n_pasCond.prop.sub[,,1]
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond_prop.sub.bp <- barplot(rRates.n_pasCond.prop.sub[,,sub],
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "proportion of responses"
)
}
rRates.n_pasCond.prop.sub[,,1]
par(mfrow=c(3,3))
for (sub in 1:nSubs) {
pasCond_prop.sub.bp <- barplot(t(rRates.n_pasCond.prop.sub[,,sub]),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
#legend.text=pasResps,
#args.legend = list(x="bottomright"),
main = c('Subject',sub),
xlab = "study duration",
ylab = "proportion of responses"
)
}
rRates.n_pasCond.prop.sub[,,2]
rRates.mean_cond.item = matrix(0,nrow=nConds,ncol=nItems)
rRates.sem_cond.item = matrix(0,nrow=nConds,ncol=nItems)
rRates.n_cond.item = matrix(0,nrow=nConds,ncol=nItems)
for (cond in 1:nConds){
for (item in 1:nItems) {
rRates.mean_cond.item[cond,item] <-
mean(data[data$condition==cond &
data$whichItem==item,]$named,
na.rm=TRUE)
rRates.n_cond.item[cond,item] <-
dim(data[data$condition==cond &
data$whichItem==item,])[1]
# var = n*p*(1-p)
rRates.sem_cond.item[cond,item] <-
sqrt(rRates.n_cond.item[cond,item] *
rRates.mean_cond.item[cond,item] *
(1- rRates.mean_cond.item[cond,item])) /
sqrt(rRates.n_cond.item[cond,item])
}
}
rRates.mean_cond.item
rRates.mean_cond.item
plot(rRates.mean_cond.item[1,],rRates.mean_cond.item[4,],
xlim=c(0,1),
ylim=c(0,1),
main=c("condition",cond)
, ylab = "prop named, .5 seconds"
, xlab = "prop named, 2 seconds"
)
par(mfrow=c(1,1))
# searching for correlations between .5 and 2 sec presentation
plot(rRates.mean_cond.item[1,],rRates.mean_cond.item[4,],
xlim=c(0,1),
ylim=c(0,1),
main=c("condition",cond)
, ylab = "prop named, .5 seconds"
, xlab = "prop named, 2 seconds"
)
par(mfrow=c(1,1))
# searching for correlations between .5 and 2 sec presentation
plot(rRates.mean_cond.item[1,],rRates.mean_cond.item[4,],
xlim=c(0,1),
ylim=c(0,1),
main="proportion of item named"
, ylab = ".5 seconds"
, xlab = "2 seconds"
)
nPas
nPAS
rRates.mean_cond.item = array(0,dim=c(nConds,nPAS,nItems))
rRates.sem_cond.item = array(0,dim=c(nConds,nPAS,nItems))
rRates.n_cond.item = array(0,dim=c(nConds,nPAS,nItems))
for (cond in 1:nConds){
for (pas in 1:nPAS) {
for (item in 1:nItems) {
rRates.mean_cond.item[cond,pas,item] <-
mean(data[data$condition==cond
& data$studyResp==pas
& data$whichItem==item,]$named,
na.rm=TRUE)
rRates.n_cond.item[cond,pas,item] <-
dim(data[data$condition==cond
& data$studyResp==pas
& data$whichItem==item,])[1]
# var = n*p*(1-p)
rRates.sem_cond.item[cond,pas,item] <-
sqrt(rRates.n_cond.item[cond,pas,item] *
rRates.mean_cond.item[cond,pas,item] *
(1- rRates.mean_cond.item[cond,pas,item])) /
sqrt(rRates.n_cond.item[cond,pas,item])
}
}
}
rRates.mean_cond.item
par(mfrow=c(1,1))
# searching for correlations between .5 and 2 sec presentation
plot(rRates.mean_cond.item[1,],rRates.mean_cond.item[4,],
xlim=c(0,1),
ylim=c(0,1),
main="proportion of item named, counfounded"
, ylab = ".5 seconds"
, xlab = "2 seconds"
)
rRates.mean_cond.item = matrix(0,nrow=nConds,ncol=nItems)
rRates.sem_cond.item = matrix(0,nrow=nConds,ncol=nItems)
rRates.n_cond.item = matrix(0,nrow=nConds,ncol=nItems)
for (cond in 1:nConds){
for (item in 1:nItems) {
rRates.mean_cond.item[cond,item] <-
mean(data[data$condition==cond
& data$whichItem==item,]$named,
na.rm=TRUE)
rRates.n_cond.item[cond,pas,item] <-
dim(data[data$condition==cond
& data$whichItem==item,])[1]
# var = n*p*(1-p)
rRates.sem_cond.item[cond,item] <-
sqrt(rRates.n_cond.item[cond,item] *
rRates.mean_cond.item[cond,item] *
(1- rRates.mean_cond.item[cond,item])) /
sqrt(rRates.n_cond.item[cond,item])
}
}
rRates.mean_cond.item = matrix(0,nrow=nConds,ncol=nItems)
rRates.sem_cond.item = matrix(0,nrow=nConds,ncol=nItems)
rRates.n_cond.item = matrix(0,nrow=nConds,ncol=nItems)
for (cond in 1:nConds){
for (item in 1:nItems) {
rRates.mean_cond.item[cond,item] <-
mean(data[data$condition==cond
& data$whichItem==item,]$named,
na.rm=TRUE)
rRates.n_cond.item[cond,item] <-
dim(data[data$condition==cond
& data$whichItem==item,])[1]
# var = n*p*(1-p)
rRates.sem_cond.item[cond,item] <-
sqrt(rRates.n_cond.item[cond,item] *
rRates.mean_cond.item[cond,item] *
(1- rRates.mean_cond.item[cond,item])) /
sqrt(rRates.n_cond.item[cond,item])
}
}
par(mfrow=c(1,1))
# searching for correlations between .5 and 2 sec presentation
plot(rRates.mean_cond.item[1,],rRates.mean_cond.item[4,],
xlim=c(0,1),
ylim=c(0,1),
main="proportion of item named, counfounded"
, ylab = ".5 seconds"
, xlab = "2 seconds"
)
par(mfrow=c(1,1))
# looking at raw numbers of each PAS per condition
pasCond_n.bp <- barplot(t(rRates.n_pasCond.prop),
beside=TRUE,
names.arg=studyConds,
ylim=c(0,1),
#col=presentCol,
legend.text=pasResps,
args.legend = list(x="topright"),
xlab = "study length",
ylab = "proportion of resposnes"
)
rRates.mean_cond.item = array(0,dim=c(nConds,nPAS,nItems))
rRates.sem_cond.item = array(0,dim=c(nConds,nPAS,nItems))
rRates.n_cond.item = array(0,dim=c(nConds,nPAS,nItems))
for (cond in 1:nConds){
for (pas in 1:nPAS) {
for (item in 1:nItems) {
rRates.mean_cond.item[cond,pas,item] <-
mean(data[data$condition==cond
& data$studyResp==pas
& data$whichItem==item,]$named,
na.rm=TRUE)
rRates.n_cond.item[cond,pas,item] <-
dim(data[data$condition==cond
& data$studyResp==pas
& data$whichItem==item,])[1]
# var = n*p*(1-p)
rRates.sem_cond.item[cond,pas,item] <-
sqrt(rRates.n_cond.item[cond,pas,item] *
rRates.mean_cond.item[cond,pas,item] *
(1- rRates.mean_cond.item[cond,pas,item])) /
sqrt(rRates.n_cond.item[cond,pas,item])
}
}
}
rRates.n_cond.item
dim(rRates.n_cond.item)
par(mfrow=c(2,2))
# searching for correlations between .5 and 2 sec presentation
plot(rRates.n_cond.item[1,1,],rRates.mean_cond.item[1,1,]
#xlim=c(0,1),
#ylim=c(0,1),
#main="proportion of item named, counfounded"
#, ylab = "PAS 0"
#, xlab = "PAS 3"
)
par(mfrow=c(2,2))
# searching for correlations between .5 and 2 sec presentation
plot(rRates.n_cond.item[1,,],rRates.mean_cond.item[1,,]
#xlim=c(0,1),
#ylim=c(0,1),
#main="proportion of item named, counfounded"
#, ylab = "PAS 0"
#, xlab = "PAS 3"
)
hist(rRates.n_cond.item[1,,]
#xlim=c(0,1),
#ylim=c(0,1),
#main="proportion of item named, counfounded"
#, ylab = "PAS 0"
#, xlab = "PAS 3"
)
barplot(rRates.n_cond.item[1,,]
#xlim=c(0,1),
#ylim=c(0,1),
#main="proportion of item named, counfounded"
#, ylab = "PAS 0"
#, xlab = "PAS 3"
)
barplot(t(rRates.n_cond.item[1,,])
#xlim=c(0,1),
#ylim=c(0,1),
#main="proportion of item named, counfounded"
#, ylab = "PAS 0"
#, xlab = "PAS 3"
)
hist(t(rRates.n_cond.item[1,,])
#xlim=c(0,1),
#ylim=c(0,1),
#main="proportion of item named, counfounded"
#, ylab = "PAS 0"
#, xlab = "PAS 3"
)
