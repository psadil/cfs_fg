mutate(., pas2 = mapvalue(studyResp2 = 1:8, to=c(3,2,1,0,0,1,2,3)))
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp1 = 1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2 = 1:8, to=c(3,2,1,0,0,1,2,3)))
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp1, from= 1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2, from=1:8, to=c(3,2,1,0,0,1,2,3)))
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp, from= 1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2, from=1:8, to=c(3,2,1,0,0,1,2,3)))
head(data)
?transmute
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
transmute(., condition = plyr::mapvalues(condition, from=1:4, to=c('a_foil','b_word','c_cfs','d_binocular')))
data
head(data)
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., condition = plyr::mapvalues(condition, from=1:4, to=c('a_foil','b_word','c_cfs','d_binocular')))
head(data)
library(dplyr)
dataFile <- paste(wd, "/cfs_afc_ss1_wFB_Q_noCheck.dat", sep="")
# find the data that was generated from the matlab files
data_test <- read.csv(dataFile)
dataFile <- paste(wd, "/cfs_afc_ss1_wFB_Q_noCheck_study.dat", sep="")
# find the data that was generated from the matlab files
data_study <- read.csv(dataFile)
# join by subject, and item
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., condition = plyr::mapvalues(condition, from=1:4, to=c('a_foil','b_word','c_cfs','d_binocular')))
nS <- lapply(data, FUN = max, na.rm=TRUE)
# add 1 to study resp because participants were instructed to use 0-3
nS$pas1 <- nS$pas1+1
nS$nPerCond <- nS$nItems / nS$nConds
nS$nStudy = nS$nTrials * nS$nPresent
data[,c('subject','condition','whichItem','studyResp','studyResp2','pas1','pas2','list')] <- lapply(data[,c('subject','condition','whichItem','studyResp','studyResp2','pas1','pas2','list')], FUN=factor)
# don't want PAS as a factor, because there are
# vastly different numbers of each kind of response
# Do I want condition as factor? if it were, that would
# seem to make stronger claims (justified) about higher levels
# leading to higher recall rates
studyConds <- c("foil","word","cfs","binoc")
cols <- c('black', 'cornflowerblue', 'darkgoldenrod1', 'red')
pasResps <- c("0","1","2","3")
cutoff = 3 # only look at CFS with PAS 2 or 1
nPresent = 3 # presented 3 times
pd <- position_dodge(1)
detach(package:dplyr)
library(plyr)
dfwc3 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","pas2"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc3<-ddply(dfwc3,.(condition),transform,prop=N/sum(N))
dfwc1 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","pas1"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc1<-ddply(dfwc1,.(condition),transform,prop=N/sum(N))
detach(package:plyr)
ggplot(dfwc3, aes(x=pas2, y=named)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=named-ci, ymax=named+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("named") +
ggtitle("% named for each condition, given second PAS")
ggplot(dfwc3, aes(x=pas2, y=prop)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=prop-ci, ymax=prop+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("proportion") +
ggtitle("proportion of each PAS (second presentation) in each condition")
ggplot(dfwc1, aes(x=pas1, y=named)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=named-ci, ymax=named+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("named") +
ggtitle("% named for each condition, given first PAS")
ggplot(dfwc1, aes(x=pas1, y=prop)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=prop-ci, ymax=prop+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("proportion") +
ggtitle("proportion of each PAS (first presentation) in each condition")
library(plyr)
dfwc_pas <- summarySEwithin(data, measurevar="named", withinvars=c("pas1","pas2"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas<-ddply(dfwc_pas,.(pas2),transform,p3Gp1=N/sum(N))
dfwc_pas_cfs <- summarySEwithin(data[data$condition=='c_cfs',], measurevar="named",                          withinvars=c("pas1","pas2"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas_cfs<-ddply(dfwc_pas_cfs,.(pas2),transform,p3Gp1=N/sum(N))
detach(package:plyr)
ggplot(dfwc_pas, aes(x=pas2, y=p3Gp1)) +
geom_bar(position=pd, colour="black", stat="identity") +
facet_grid(. ~ pas1 ) +
facet_wrap(~ pas1, ncol=3) +
xlab("PAS") +
ylab("p(PAS_3|PAS_1)") +
ggtitle(" Proportion of second PAS given first PAS ")
library(plyr)
afc_all <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_all <- summarySEwithin(data, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stAll <- cbind(named=name_all$named
,named_norm=name_all$named_norm
,ci_named=name_all$ci
,afc_all
,count=(afc_all$N+name_all$N)/2)
library(plyr)
afc_all <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_all <- summarySEwithin(data, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stAll <- cbind(named=name_all$named
,named_norm=name_all$named_norm
,ci_named=name_all$ci
,afc_all
,count=(afc_all$N+name_all$N)/2)
detach(package:plyr)
ggplot(toPlot_stAll, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1)  +  #aes(size=count)
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, for each condition, collapsed across PAS/presentations") +
theme(aspect.ratio = 1) +
# theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank())
library(dplyr)
afc_all_list <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95)
summarySEwithin(data, measurevar="named",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=., y=afc_all_list, by = c('condition', 'list','N')) %>%
ggplot(data=., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci.x, ymax=named+ci.x), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci.y, xmax=afc+ci.y), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1) +
facet_grid(. ~ list ) +
facet_wrap(~ list, ncol=3) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, by list") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
library(dplyr)
afc <- select(data,subject, condition, named, afc, pas1) %>%
filter(., (condition == 'd_binocular' & pas1 == 3) |
(condition == 'a_foil') |
(condition == 'b_word' & pas1 == 3) |
(condition == 'c_cfs' & pas1 == 2)) %>%
group_by(., subject, condition) %>%
summarySEwithin(., measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
select(data,subject, condition, named, afc, pas1) %>%
filter(., (condition == 'd_binocular' & pas1 == 3) |
(condition == 'a_foil') |
(condition == 'b_word' & pas1 == 3) |
(condition == 'c_cfs' & pas1 == 2)) %>%
group_by(., subject, condition) %>%
summarySEwithin(., measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=afc, y=., by = c('condition','N')) %>%
ggplot(data = ., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci.y, ymax=named+ci.y), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci.x, xmax=afc+ci.x), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1)  +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, (cfs==2), (word & binoc == 3)") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
library(ggplot2)
library(gridExtra)
library(pander)
source("D:/Documents/R/fns.R")
setwd("D:/documents/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q")
wd <- getwd()
library(dplyr)
dataFile <- paste(wd, "/cfs_afc_ss1_wFB_Q_noCheck.dat", sep="")
# find the data that was generated from the matlab files
data_test <- read.csv(dataFile)
dataFile <- paste(wd, "/cfs_afc_ss1_wFB_Q_noCheck_study.dat", sep="")
# find the data that was generated from the matlab files
data_study <- read.csv(dataFile)
# join by subject, and item
data <- inner_join(x=data_test,y=data_study, by=c('whichItem','subject')) %>%
rename(., condition=condition.x) %>%
mutate(., pas1 = plyr::mapvalues(studyResp, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., pas2 = plyr::mapvalues(studyResp2, from=1:8, to=c(3,2,1,0,0,1,2,3))) %>%
mutate(., condition = plyr::mapvalues(condition, from=1:4, to=c('a_foil','b_word','c_cfs','d_binocular')))
nS <- lapply(data, FUN = max, na.rm=TRUE)
# add 1 to study resp because participants were instructed to use 0-3
nS$pas1 <- nS$pas1+1
nS$nPerCond <- nS$nItems / nS$nConds
nS$nStudy = nS$nTrials * nS$nPresent
data[,c('subject','condition','whichItem','studyResp','studyResp2','pas1','pas2','list')] <- lapply(data[,c('subject','condition','whichItem','studyResp','studyResp2','pas1','pas2','list')], FUN=factor)
# don't want PAS as a factor, because there are
# vastly different numbers of each kind of response
# Do I want condition as factor? if it were, that would
# seem to make stronger claims (justified) about higher levels
# leading to higher recall rates
studyConds <- c("foil","word","cfs","binoc")
cols <- c('black', 'cornflowerblue', 'darkgoldenrod1', 'red')
pasResps <- c("0","1","2","3")
cutoff = 3 # only look at CFS with PAS 2 or 1
nPresent = 3 # presented 3 times
pd <- position_dodge(1)
detach(package:dplyr)
data
ns
nS
library(plyr)
dfwc3 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","pas2"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc3<-ddply(dfwc3,.(condition),transform,prop=N/sum(N))
dfwc1 <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","pas1"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc1<-ddply(dfwc1,.(condition),transform,prop=N/sum(N))
detach(package:plyr)
ggplot(dfwc3, aes(x=pas2, y=named)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=named-ci, ymax=named+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("named") +
ggtitle("% named for each condition, given second PAS")
ggplot(dfwc3, aes(x=pas2, y=prop)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=prop-ci, ymax=prop+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("proportion") +
ggtitle("proportion of each PAS (second presentation) in each condition")
ggplot(dfwc1, aes(x=pas1, y=named)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=named-ci, ymax=named+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("named") +
ggtitle("% named for each condition, given first PAS")
ggplot(dfwc1, aes(x=pas1, y=prop)) +
geom_bar(position=pd, colour="black", stat="identity") +
geom_errorbar(width=.25, aes(ymin=prop-ci, ymax=prop+ci)) +
facet_grid(. ~ condition ) +
xlab("PAS") +
ylab("proportion") +
ggtitle("proportion of each PAS (first presentation) in each condition")
library(plyr)
dfwc_pas <- summarySEwithin(data, measurevar="named", withinvars=c("pas1","pas2"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas<-ddply(dfwc_pas,.(pas2),transform,p3Gp1=N/sum(N))
dfwc_pas_cfs <- summarySEwithin(data[data$condition=='c_cfs',], measurevar="named",                          withinvars=c("pas1","pas2"),
idvar="subject", na.rm=FALSE, conf.interval=.95)
dfwc_pas_cfs<-ddply(dfwc_pas_cfs,.(pas2),transform,p3Gp1=N/sum(N))
detach(package:plyr)
ggplot(dfwc_pas, aes(x=pas2, y=p3Gp1)) +
geom_bar(position=pd, colour="black", stat="identity") +
facet_grid(. ~ pas1 ) +
facet_wrap(~ pas1, ncol=3) +
xlab("PAS") +
ylab("p(PAS_3|PAS_1)") +
ggtitle(" Proportion of second PAS given first PAS ")
ggplot(dfwc_pas, aes(x=pas2, y=p3Gp1)) +
geom_bar(position=pd, colour="black", stat="identity") +
facet_grid(. ~ pas1 ) +
facet_wrap(~ pas1, ncol=3) +
xlab("PAS") +
ylab("p(PAS_3|PAS_1)") +
ggtitle(" Proportion of second PAS given first PAS ")
library(plyr)
afc_all <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_all <- summarySEwithin(data, measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_stAll <- cbind(named=name_all$named
,named_norm=name_all$named_norm
,ci_named=name_all$ci
,afc_all
,count=(afc_all$N+name_all$N)/2)
detach(package:plyr)
ggplot(toPlot_stAll, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1)  +  #aes(size=count)
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, for each condition, collapsed across PAS/presentations") +
theme(aspect.ratio = 1) +
# theme(axis.ticks = element_blank(), axis.text.x = element_blank()) +
theme(axis.ticks = element_blank())
library(dplyr)
afc_all_list <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95)
summarySEwithin(data, measurevar="named",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=., y=afc_all_list, by = c('condition', 'list','N')) %>%
ggplot(data=., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci.x, ymax=named+ci.x), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci.y, xmax=afc+ci.y), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1) +
facet_grid(. ~ list ) +
facet_wrap(~ list, ncol=3) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, by list") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
library(dplyr)
afc_all_list <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95)
summarySEwithin(data, measurevar="named",
withinvars=c("condition", 'list'),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=., y=afc_all_list, by = c('condition', 'list','N')) %>%
ggplot(data=., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci.x, ymax=named+ci.x), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci.y, xmax=afc+ci.y), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1) +
facet_grid(. ~ list ) +
facet_wrap(~ list, ncol=3) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, by list") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
library(dplyr)
afc <- select(data,subject, condition, named, afc, pas1) %>%
filter(., (condition == 'd_binocular' & pas1 == 3) |
(condition == 'a_foil') |
(condition == 'b_word' & pas1 == 3) |
(condition == 'c_cfs' & pas1 == 2)) %>%
group_by(., subject, condition) %>%
summarySEwithin(., measurevar="afc",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
select(data,subject, condition, named, afc, pas1) %>%
filter(., (condition == 'd_binocular' & pas1 == 3) |
(condition == 'a_foil') |
(condition == 'b_word' & pas1 == 3) |
(condition == 'c_cfs' & pas1 == 2)) %>%
group_by(., subject, condition) %>%
summarySEwithin(., measurevar="named",
withinvars=c("condition"),
idvar="subject", na.rm=TRUE, conf.interval=.95) %>%
inner_join(x=afc, y=., by = c('condition','N')) %>%
ggplot(data = ., aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci.y, ymax=named+ci.y), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci.x, xmax=afc+ci.x), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=1)  +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=seq(from=0, to=1, by=0.25)) +
ggtitle("state trace, (cfs==2), (word & binoc == 3)") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
detach(package:dplyr)
# state trace plots
dfwc3_afc <- summarySEwithin(data, measurevar="afc", withinvars=c("condition","pas2"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot3 <- cbind(named=dfwc3$named,ci_named=dfwc3$ci
,dfwc3_afc,count=(dfwc3$N+dfwc3_afc$N)/2)
dfwc1_afc <- summarySEwithin(data, measurevar="afc", withinvars=c("condition","pas1"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot1 <- cbind(named=dfwc1$named,ci_named=dfwc1$ci
,dfwc1_afc,count=(dfwc1$N+dfwc1_afc$N)/2)
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, size=1) +
facet_grid(. ~ pas2 ) +
facet_wrap(~ pas2, ncol=3) +
ggtitle("state trace, facets indicate PAS response on second presentation") +
theme(aspect.ratio = 1)
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, size=1) +
facet_grid(. ~ pas2 ) +
facet_wrap(~ pas2, ncol=3) +
ggtitle("state trace, facets indicate PAS response on second presentation") +
theme(aspect.ratio = 1)
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, aes(size=count)) +
scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ pas2 ) +
facet_wrap(~ pas2, ncol=3) +
ggtitle("state trace, facets indicate PAS response on second presentation") +
theme(aspect.ratio = 1)
pander(toPlot3)
ggplot(toPlot3, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
geom_point(position=pd, aes(size=count)) +
scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ pas2 ) +
facet_wrap(~ pas2, ncol=3) +
ggtitle("state trace, facets indicate PAS response on second presentation") +
theme(aspect.ratio = 1)
pander(toPlot3)
afc_sub <- summarySEwithin(data, measurevar="afc",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
name_sub <- summarySEwithin(data, measurevar="named",
withinvars=c("condition","subject"),
idvar="subject", na.rm=TRUE, conf.interval=.95)
toPlot_sub <- cbind(named=name_sub$named
,named_norm=name_sub$named_norm
,ci_named=name_sub$ci
,afc_sub
,count=(afc_sub$N+name_sub$N)/2)
ggplot(toPlot_sub, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
# ylim(0,1) +
# xlim(0,1) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
geom_point(position=pd, size=1)  +  #aes(size=count)
#  scale_size_continuous(breaks=c(10,100,200,400,600)) +
facet_grid(. ~ subject ) +
facet_wrap(~ subject, ncol=5) +
ggtitle("state trace, by subject, raw scores") +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
items_named <- summarySEwithin(data, measurevar="named"
, withinvars=c("condition","whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
items_afc <- summarySEwithin(data, measurevar="afc"
, withinvars=c("condition","whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
toPlot_item <- cbind(named=items_named$named
,named_norm=items_named$named_norm
,ci_named=items_named$ci
,items_afc
,count=(items_afc$N+items_named$N)/2)
items_named_avg <- summarySEwithin(data, measurevar="named"
, withinvars=c("whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
items_afc_avg <- summarySEwithin(data, measurevar="afc"
, withinvars=c("whichItem"),
idvar="whichItem", na.rm=FALSE, conf.interval=.95)
toPlot_item_avg <- cbind(named=items_named_avg$named
,named_norm=items_named_avg$named_norm
,ci_named=items_named_avg$ci
,items_afc_avg
,count=(items_afc_avg$N+items_named_avg$N)/2)
ggplot(toPlot_item, aes(x=afc, y=named, colour=condition, group=condition)) +
geom_errorbar(aes(ymin=named-ci_named, ymax=named+ci_named), colour="black", width=.05, position=pd) +
geom_errorbarh(aes(xmin=afc-ci, xmax=afc+ci), colour="black", height = .05, position=pd) +
geom_point(position=pd, size=2)  +  # count
# scale_size_continuous(breaks=c(50,100,150,200)) +
facet_grid(. ~ condition ) +
coord_cartesian(xlim = c(0, 1), ylim = c(0,1)) +
scale_y_continuous(breaks=c(0,1)) +
scale_x_continuous(breaks=c(0,1)) +
facet_wrap(~ condition, ncol=2) +
ggtitle("state trace, for each items") +
# ylim(0,1) +
# xlim(0,1) +
theme(aspect.ratio = 1) +
theme(axis.ticks = element_blank())
# theme(axis.ticks = element_blank(), axis.text.y = element_blank())
source('~/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick/R_code.R')
setwd("~/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick")
source('~/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick/R_code.R')
pairs()
source('~/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q/Stuff for Patrick/R_code.R')
