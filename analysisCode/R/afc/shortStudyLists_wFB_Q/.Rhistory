for (rep in 1:nReps){
for (d in 1:di){
# sample 20 stimuli (features)
stims <- matrix(0,nrow=n,ncol=d)
for (sim in 1:n){
stims[sim,] <- sample(fts,d,replace=TRUE)
}
seenTwice[(di * (rep-1)) + d,1] = sum(duplicated(stims))
}
}
seenTwice <- as.data.frame(seenTwice)
seenTwice$dims <- rep(1:di, times=nReps)
ggplot(seenTwice, aes(V1)) +
geom_histogram() +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .1) +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = 1) +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .75) +
facet_wrap(~dims,ncol=4)
sum(seenTwice$V1>0)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .5) +
facet_wrap(~dims,ncol=4)
nReps <- 100000
di <- 10 # test for weights 1:di
seenTwice <- matrix(0,nrow=di*nReps,ncol=1)
for (rep in 1:nReps){
for (d in 1:di){
# sample 20 stimuli (features)
stims <- matrix(0,nrow=n,ncol=d)
for (sim in 1:n){
stims[sim,] <- sample(fts,d,replace=TRUE)
}
seenTwice[(di * (rep-1)) + d,1] = sum(duplicated(stims))
}
}
seenTwice <- as.data.frame(seenTwice)
seenTwice$dims <- rep(1:di, times=nReps)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .5) +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .1) +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .75) +
facet_wrap(~dims,ncol=4)
# weights (random)
nReps <- 10000000
di <- 10 # test for weights 1:di
seenTwice <- matrix(0,nrow=di*nReps,ncol=1)
for (rep in 1:nReps){
for (d in 1:di){
# sample 20 stimuli (features)
stims <- matrix(0,nrow=n,ncol=d)
for (sim in 1:n){
stims[sim,] <- sample(fts,d,replace=TRUE)
}
seenTwice[(di * (rep-1)) + d,1] = sum(duplicated(stims))
}
}
seenTwice <- as.data.frame(seenTwice)
seenTwice$dims <- rep(1:di, times=nReps)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .75) +
facet_wrap(~dims,ncol=4)
seenTwice <- as.data.frame(seenTwice)
seenTwice$dims <- rep(1:di, times=nReps)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .75) +
facet_wrap(~dims,ncol=4)
n <- 20
# from which to sample
fts <- c(0,1)
# weights (random)
nReps <- 10000
di <- 10 # test for weights 1:di
seenTwice <- matrix(0,nrow=di*nReps,ncol=1)
for (rep in 1:nReps){
for (d in 1:di){
# sample 20 stimuli (features)
stims <- matrix(0,nrow=n,ncol=d)
for (sim in 1:n){
stims[sim,] <- sample(fts,d,replace=TRUE)
}
seenTwice[(di * (rep-1)) + d,1] = sum(duplicated(stims))
}
}
seenTwice <- as.data.frame(seenTwice)
seenTwice$dims <- rep(1:di, times=nReps)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .75) +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_density(binwidth = .75) +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_density() +
facet_wrap(~dims,ncol=4)
ggplot(seenTwice, aes(V1)) +
geom_histogram(binwidth = .75) +
facet_wrap(~dims,ncol=4)
n <- 10000
# from which to sample
fts <- c(0,1)
# weights (random)
di <- 100
mse <- matrix(0,nrow=n*di)
for (d in 1:di){
# declare weights
w <- runif(n)
for (i in 1:(d-1)){
w <- cbind(w,runif(n))
}
# create distribution of mse
for (sim in 1:n){
i <- sample(fts,d,replace=TRUE)
mse[sim + (n*(d-1) ) ,1] <- sum((w[sim,]-i)^2)/d
}
}
df <- as.data.frame(mse)
df$dims <- factor(rep(1:di, each=n))
ggplot(df, aes(V1)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~dims,ncol=4)
n <- 10000
# from which to sample
fts <- c(0,1)
# weights (random)
di <- 20
mse <- matrix(0,nrow=n*di)
for (d in 1:di){
# declare weights
w <- runif(n)
for (i in 1:(d-1)){
w <- cbind(w,runif(n))
}
# create distribution of mse
for (sim in 1:n){
i <- sample(fts,d,replace=TRUE)
mse[sim + (n*(d-1) ) ,1] <- sum((w[sim,]-i)^2)/d
}
}
df <- as.data.frame(mse)
df$dims <- factor(rep(1:di, each=n))
ggplot(df, aes(V1)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~dims,ncol=4)
sum(df[df$dims==5,]$V1 < .1)
sum(df[df$dims==6,]$V1 < .1 )
sum(df[df$dims==7,]$V1 < .1 )
sum(df[df$dims==\10,]$V1 < .1 )
sum(df[df$dims==10,]$V1 < .1 )
2^5
2^6
2^7
2^8
sum(df[df$dims==8,]$V1 < .1 )
sum(df[df$dims==8,]$V1 < .05 )
sum(seenTwice[seenTwice$dims==8,]$V1)
sum(seenTwice[seenTwice$dims==8,]$V1 > 1)
sum(seenTwice[seenTwice$dims==8,]$V1 > 2)
sum(seenTwice[seenTwice$dims==8,]$V1 ==0 )
sum(seenTwice[seenTwice$dims==8,]$V1 == 1 )
x <- seq(from=0,to=1,by=.01)
y<-1/(1+exp(-x))
plot(x,y)
x <- seq(from=0,to=1,by=.01)
y<-1/(1+exp(-log(1/x)))
plot(x,y)
x <- seq(from=0,to=1,by=.01)
y<-1/(1+exp(-.08*log(1/x)))
plot(x,y)
x <- seq(from=0,to=1,by=.01)
y<-1/(1+exp(-.08*log(1/x)))
plot(x,y, lty='l')
?lpot.xy
?plot.xy
x <- seq(from=0,to=1,by=.001)
y<-1/(1+exp(-.08*log(1/x)))
plot(x,y)
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-.08*log(1/x)))
plot(x,y)
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-1*log(1/x)))
plot(x,y)
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-.1*log(1/x)))
plot(x,y)
k=.1
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
k=.01
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
k=1
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
k=10
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
k=100
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
k=5
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
k=1
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
S <- 2/3
A <- 1.7159
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*x2)
plot(x2,y2)
S <- 2/3
A <- 1.7159
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*(1/x2))
plot(x2,y2)
S <- 1
A <- 1
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*(1/x2))
plot(x2,y2)
S <- -1
A <- 1
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*(1/x2))
plot(x2,y2)
S <- -1
A <- 1
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*x2)
plot(x2,y2)
S <- 1
A <- 1
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*x2)
plot(x2,y2)
S <- 1
A <- 1
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*(1/x2))
plot(x2,y2)
w <- c(.9,.5,.1)
i1 <- c(.9,.9,.9)
i2 <- c(.5,.5,.5)
i3 <- c(.8,.4,.1)
w_norm <- as.matrix(w/norm(as.matrix(w)))
i1_norm <- as.matrix(i1/norm(as.matrix(i1)))
i2_norm <- as.matrix(i2/norm(as.matrix(i2)))
i3_norm <- as.matrix(i3/norm(as.matrix(i3)))
theta <- angle(w_norm,i3_norm)
angle <- function(x,y){
theta <- acos( (x%*%y ) / (norm(x,type="2") * norm(y,type="2")))
as.numeric(theta)
}
theta <- angle(w_norm,i3_norm)
theta <- angle(t(w_norm),i3_norm)
theta
w_norm
S <- 1
A <- 1
x2 <- seq(from=0,to=1,by=.01)
y2<-A*tanh(S*x2)
plot(x2,y2)
k=2
x <- seq(from=0,to=1,by=.0001)
y<-1/(1+exp(-k*log(1/x)))
plot(x,y)
n <- 50^2
# from which to sample
fts <- c(0,1)
# weights (random)
di <- 20
mse <- matrix(0,nrow=n*di)
for (d in 1:di){
# declare weights
w <- runif(n)
for (i in 1:(d-1)){
w <- cbind(w,runif(n))
}
# create distribution of mse
for (sim in 1:n){
i <- sample(fts,d,replace=TRUE)
mse[sim + (n*(d-1) ) ,1] <- sum((w[sim,]-i)^2)/d
}
}
df <- as.data.frame(mse)
df$dims <- factor(rep(1:di, each=n))
ggplot(df, aes(V1)) +
geom_histogram(binwidth = 0.01) +
facet_wrap(~dims,ncol=4)
sum(df[df$dims==8,]$V1 < .1 )
sum(df[df$dims==9,]$V1 < .1 )
sum(df[df$dims==10,]$V1 < .1 )
2^8
2^9
2^8
2^7
2^6
install.packages('psyphy')
library(psyphy)
?dprime.SD
library(updateR)
library(installr)
?installr
installr(GUI = TRUE)
R CMD check -h
R CMD check --help
library(devtools)
install.packages(devtools)
install.packages('devtools')
library(devtools)
R CMD check --help
devtools::check()
?root
istall.package('root')
install.package('root')
install.packages('root')
install.packages('base')
library(psyphy)
install.packages('gdata')
library(gdata)
install.packages('dplyr')
install.packages('reshape2')
install.packages('psyphy')
install.packages('ggplot2)
install.packages('ggplot2')
library(psyphy)
?dprime.SD
dprime.SD
dprime.SD(H = 0.642, F = 0.3)
qnorm(.642) - qnorm(.3)
(qnorm(.642)*sqrt(2)) - (qnorm(.3)*sqrt(2))
.888*sqrt(2)
qnorm(.642*sqrt(2)) - qnorm(.3*sqrt(2))
k <- sqrt(2)
root2 <- sqrt(2)
k <- root2 * qnorm(FA/2)
FA=.3
root2 <- sqrt(2)
k <- root2 * qnorm(FA/2)
k
root2
H=.642
H - pnorm((k + dp)/root2) - pnorm((k - dp)/root2)
?uniroot
est.dp <- function(dp) {
H - pnorm((k + dp)/root2) - pnorm((k - dp)/root2)
}
dp.res <- uniroot(est.dp, interval = c(0, 10))
dp.res
dprime <- dp.res$root
dPrime
uniroot(qnorm(H)-((k+dp)/root2)-((k-dp)/root2),interval=c(0,10))
est.dp2 <- function(dp) {
qnorm(H) - (k + dp)/root2 - (k - dp)/root2
}
est.dp2()
dp.res2 <- uniroot(est.dp2, interval = c(0, 10))
dprime.SD
dprime.SD(H,F)
H
F
dprime.SD(H,FA)
dprime.SD(H,FA, method='IO')
pnorm(1)
pnorm(2)
qnorm(1)
qnorm(H) - qnorm(FA)
?qnorm
erfinv <- function (x) qnorm((1 + x)/2)/sqrt(2)
erfinv(H) - erfinv(FA)
H
FA
erfinv(.5)
erfinv(1)
erfinv(0)
erfinv(.5)
qnorm(,5)
qnorm(05)
qnorm(.5)
qnorm(0)
qnorm(.75)
dprime.sd
dprime.SD
k
H
FA
H
sqrt(2)*qnorm(H)
k
k*2
H = .9706
k = -3.1698
est.dp <- function(dp) {
H - pnorm((k + dp)/root2) - pnorm((k - dp)/root2)
}
root2
uniroot(est.pf, interval=c(0,10))
uniroot(est.dp, interval=c(0,10))
?pf
pf(9.24,1,5,lower.tail = FALSE)
pf(22.38,4,20,lower.tail = FALSE)
pf(4.04,4,20,lower.tail = FALSE)
control <- c(.98,.96,.93,.84)
lesion <- c(.94,.75,.63,.59)
library(dplr)
library(dplyr)
as.data.frame(c_pc = control, l_pc = lesion)
as.data.frame(cbind(t(control),t(lesion)))
as.data.frame(rbind(t(control),t(lesion)))
as.data.frame(cbind(control,lesion))
qnorm(.5)
as.data.frame(cbind(control,lesion)) %>%
mutate(., c_dp = qnorm(control), l_dp = qnorm(lesion))
d <- as.data.frame(cbind(control,lesion)) %>%
mutate(., c_dp = qnorm(control), l_dp = qnorm(lesion))
df(2.25,1,5,lower.tail=FALSE)
pf(2.25,1,5,lower.tail=FALSE)
(.1*3000)
(.01*3000)
(.005*3000)
(.001*3000)
pt(.25)
pt(.25,1)
pnorm(.025)
pnorm(.975)
days = 31
cleaned = .75*6
cleaned = (.75*6)+3
300/days
(300/days)*cleaned
300-((300/days)*cleaned)
source('C:/Users/admin/Desktop/Stuff for Patrick/R_code.R')
source('C:/Users/admin/Desktop/Stuff for Patrick/R_code.R')
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
library(ggplot2)
library(gridExtra)
library(pander)
source("D:/Documents/R/fns.R")
setwd("D:/documents/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q")
wd <- getwd()
source("loadData.R")
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
library(ggplot2)
library(gridExtra)
library(pander)
source("D:/Documents/R/fns.R")
setwd("D:\documents\uMass\firstYear\behavioralExpts\cfs_fg\analysisCode\R\afc\shortStudyLists_wFB_Q")
wd <- getwd()
source("loadData.R")
install.packages('pander')
library(ggplot2)
library(gridExtra)
library(pander)
source("D:/Documents/R/fns.R")
devtools::install_github('psadil/utilityFns')
library(utilityFns)
setwd("D:/documents/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q")
wd <- getwd()
source("loadData.R")
source("loadData.R")
data
head(data)
nS$subject
hist(data$rt1)
hist(data$rt2)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
library(ggplot2)
library(gridExtra)
library(pander)
library(utilityFns)
setwd("D:/documents/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q")
wd <- getwd()
source("loadData.R")
head(d)
head(data)
hist(data$rt1)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, echo=FALSE)
library(ggplot2)
library(gridExtra)
library(pander)
library(utilityFns)
setwd("D:/documents/uMass/firstYear/behavioralExpts/cfs_fg/analysisCode/R/afc/shortStudyLists_wFB_Q")
wd <- getwd()
source("loadData.R")
hist(data$rt1)
max(data$rt1)
max(data[data$condition==1,]$rt1)
hist(data[data$condition==1,]$rt1)
data$condition
hist(data[data$condition=='a_foil',]$rt1)
(data[data$condition=='a_foil',]$rt1)
(data[data$condition=='c_cfs',]$rt1)
hist(data[data$condition=='a_foil',]$rt1)
hist(data[data$condition=='c_cfs',]$rt1)
